-### VERSIONS widget view

:javascript
  dojoConfig = { parseOnLoad: false };
  console.log('JAVASCRIPT:LOADING!');
  dojo.require("dojox.grid.EnhancedGrid");
  dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
  dojo.require("dojox.grid.enhanced.plugins.Filter");
  dojo.require("dojo.data.ItemFileReadStore");
  dojo.require("dijit.layout.TabContainer");
  dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
  dojo.require("dijit.form.Button");
  
  var version_data_#{@unique_jsid} = [
     #{@versions_ref.map{|version| "        "+version.to_json}.join(",\n")}
  ];
  var versions_json_#{@unique_jsid} = {
      //identifier: 'updated_at',
      identifier: 'version',
      label: 'name',
      items: version_data_#{@unique_jsid} };
  var versions_store_#{@unique_jsid} = new dojo.data.ItemFileReadStore({
    data: versions_json_#{@unique_jsid}
  });
  
  // NICE Dijit ConfirmDialog
  function confirmDialog(title, body, callbackFn, options) {
    var theDialog = new dijit.Dialog({
      id: 'confirmDialog',
      title: title,
      draggable: false,
      style: 'width:220px;',
      onHide: function() {
        theDialog.destroyRecursive();
      }
    });
    for(var prop in options) theDialog.attr(prop,options[prop]);
    
    var callback = function(yes) {
      theDialog.hide();
      theDialog.destroyRecursive(false);
      callbackFn(yes);
    };
    
    var message = dojo.create("p", {
      style: {
        marginTop: "5px"
      },
      innerHTML: body
    });
    var btnsDiv = dojo.create("div", {
      style: {
        textAlign: "center"
      }
    });
    var okBtn = new dijit.form.Button({label: theDialog.buttonOk, 
      id: "confirmDialogOKButton", 
      style: "margin:5px 10px;",
      onClick: function(){ callback(true) } });
    var cancelBtn = new dijit.form.Button({label: theDialog.buttonCancel, 
      id: "confirmDialogCancelButton", 
      style: "margin:5px 10px;",
      onClick: function(){ callback(false) } });
    
    theDialog.containerNode.appendChild(message);
    theDialog.containerNode.appendChild(btnsDiv);
    btnsDiv.appendChild(okBtn.domNode);
    btnsDiv.appendChild(cancelBtn.domNode);

    theDialog.show();
  };

  //### RETURN TO VERSIONS TAB
  function versionsTab(){
      var tabs = dijit.byId('history-tabs-#{@unique_id}');
      var pane = dijit.byId('versions-tab-#{@unique_id}');
      tabs.selectChild(pane);
  };
  
  //### RESTORE VERSION FROM HISTORY
  function restoreVer(ver_item){
      var item = ver_item;
      //if(!window.confirm('ARE YOU SURE?\nROLLBACK VERSION '+item.version)) return;
      console.log('RAW-ROLLBACK?',item);
      confirmDialog('Confirm Rollback &mdash;',
        'ARE YOU SURE?\n<br/>ROLLBACK VERSION '+item.version,
        function(yes){
          console.log('CONFIRM:',yes);
          if(!yes) return;
          item['provenance_comment'] = 'ROLLBACK VERSION '+item.version
          //console.log('VER:',item);
          //STRIP UNWANTED STUFF??
          delete item.version;
          //delete item.dirty;
          //delete item.created_at;
          //delete item.updated_at;
          //delete item.updated_by;
          //delete item.updated_by_name;
          //delete item.updated_comment;
          //delete item.version_id;
          //delete item.version_ts;
          //delete item.version_ttl;
          //ITEM SAVE CALLBACK
          //var item_json = JSON.stringify(item);
          window['#{@restore_callback}'](item);
        }, 
        { buttonOk:'YES', buttonCancel:'Cancel' });
  };
  
  $(window).ready(function(){ 
    console.log('DONE LOADING!!');
    
  });
  


-#%div{:id=>"versions_store_#{@unique_id}", :dojoType=>"dojo.data.ItemFileReadStore", :data=>"versions_json_#{@unique_jsid}", :style=>"height:0;margin:0;padding:0;"}

%div{:id=>"history-tabs-#{@unique_id}", :dojoType=>"dijit.layout.TabContainer", :style=>"width:870px;height:360px;margin-top:10px;padding-top:0;", 
  :prop=>"parseOnLoad:true;", :tabPosition=>"top", :useSlider=>"true", :tabStrip=>"true"}
  -#:prop=>"parseOnLoad:true;", :tabPosition=>"left-h", :tabStrip=>"false"}
  %div{:id=>"versions-tab-#{@unique_id}", :dojoType=>"dijit.layout.ContentPane", 
    :title=>"VERSIONS", :style=>"margin:0;padding:0;", :selected=>"true", :useSlider=>"false", :tabStrip=>"false"}
    %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=>"{filter:true}",  :store=>"versions_store_#{@unique_jsid}", :clientSort=>"true", 
        :style=>"width:90%;margin:0;", :jsId=>"VersionDisplayGrid_#{@unique_id}", :id=>"VersionsDisplayGrid_#{@unique_id}"}
      -#  :style=>"width:90%;margin:0;", :rowSelector=>"20px", :jsId=>"VersionDisplayGrid", :id=>"VersionDisplayGrid"}
      %script{:type=>"dojo/method", :event=>"onSelected", :args=>"idx"}
        :plain
          //SELECT Version TAB
          var item = this.getItem(idx);
          var tabs = dijit.byId('history-tabs-#{@unique_id}');
          var pane = dijit.byId(item['version_id'].toString());
          console.log('ITEM:',item);
          console.log('PANE:',pane);
          this.selection.clear();
          tabs.selectChild(pane);
          //###SCROLL TO TOP
          //window.scrollTo(0,0);
          $('html #main_container').animate({scrollTop:0}, 'slow');//IE, FF
          $('body #main_container').animate({scrollTop:0}, 'slow');//chrome, don't know if safary works
      %thead
        %tr
          %th{:field=>"version_ttl", :filterable=>false, :width=>"70px", :style=>"text-align:right;"} Version
          %th{:field=>"version_ts", :filterable=>true, :width=>"130px"} Updated
          %th{:field=>"updated_comment", :filterable=>true, :width=>"40%"} Update Comment
          %th{:field=>"provenance_comment", :filterable=>true, :width=>"30%"} Provenance Comment
  -### VERSION TABS
  - @versions_items.each do |version|
    %div{:id=>"#{version[:version_id]}", :dojoType=>"dijit.layout.ContentPane", 
      :title=>"#{version[:version_ttl]}", :style=>"margin:0;padding:0;", :selected=>"true"}
      %table{:id=>"property-table-#{version[:version_id]}", :style=>"margin:20px 50px;width:80%;float:left;"}
        %tr
          %td{:style=>"text-align:right;width:25%;"}
            %strong
              Version
          %td
            - if version[:version]==0
              Current
            - else
              = version[:version]
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              %button{:dojoType=>"dijit.form.Button", :onclick=>"versionsTab();return false;"}
                BACK TO VERSIONS
              &nbsp;&nbsp;
              -if !@current_user.nil? && (@current_user.has_role?('Data Manager',@project) || @current_user.has_role?('Principal Investigator',@project))
                %button{:dojoType=>"dijit.form.Button", :onclick=>"restoreVer(#{(version.reject{|k| @xtra.include?(k)}.merge({:id=>@item[:id]})).to_json});return false;"}
                  ROLLBACK VERSION
                -#%a{:href=>"javascript:", :onclick=>"versionsTab();return false;"}
                -#  [RETRUN TO VERSIONS TAB]
        - reset_cycle
        - @ver_properties.each do |prop|
          %tr{:class=>cycle('row1','row0')}
            - prop_dirty = (version[:dirty]&[prop[:name]]+(prop[:contains].nil? ? [] : prop[:contains])).empty?
            %td{:style=>"text-align:right;width:25%;"}
              %strong{:style=>"#{prop_dirty ? '' : 'color:#B22800'}"}
                #{prop[:label]}
            %td
              &=version[prop[:name].to_sym]
        %tr{:class=>cycle('row1','row0')}
          %td{:style=>"text-align:right;width:25%;"}
            %strong
              Update Comment
          %td
            #{version[:updated_comment]}
        %tr{:class=>cycle('row1','row0')}
          %td{:style=>"text-align:right;width:25%;"}
            %strong
              Updated
          %td
            #{version[:updated_by_name]+' -at- '+version[:version_ts]}
        %tr{:class=>cycle('row1','row0')}
          %td{:style=>"text-align:right;width:25%;"}
            %strong
              Provenance Comment
          %td
            #{version[:provenance_comment]}


-#version_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"pversions", :data=>"pversions_json"}
-#%table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{filter:true}",  :store=>"pversions", :clientSort=>"true", :style=>"width: 900px; height: 500px;", :rowSelector=>"20px", :jsId=>"VersionDisplayGrid", :id=>"VersionDisplayGrid", :title=>"Versions"}
-#  %thead
-#    %tr
-#      - @versions.properties.each do |prop|
-#        %th{:field=>"#{prop.name.to_s}", :filterable=>true, :width=>"150px"} #{prop.name.to_s.capitalize}

