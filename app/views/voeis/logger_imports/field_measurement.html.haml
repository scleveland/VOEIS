- content_for(:javascripts) do
  :javascript
    dojo.require("dijit.layout.TabContainer");
     dojo.require("dijit.layout.AccordionContainer");
     dojo.require("dijit.layout.ContentPane");
     dojo.require("dijit.form.Select");
     dojo.require("dijit.Dialog");
     dojo.require("dijit.ProgressBar");
     dojo.require("dojo.data.ItemFileReadStore");
     dojo.require("dijit.Tree");
     dojo.require("dijit.TitlePane");
     dojo.require("dijit.Tooltip");
     dojo.require("dijit.form.DropDownButton");
     dojo.require("dijit.TooltipDialog");
     dojo.require("dojox.grid.DataGrid");
     dojo.require("dojox.grid.EnhancedGrid");
     dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
     dojo.require("dojox.grid.enhanced.plugins.Filter");
     dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
     dojo.require("dijit.form.RadioButton");
     dojo.require("voeis.Server");
    variableDataStore = voeis.Server.DEFAULT.projectVariablesDataStore();
    var var_data = [#{@variables.map{|v| "        "+v.to_json}.join(",\n")}];
    var site_data = [
       #{@sites.map{|site| "        "+site.to_json}.join(",\n")}
     ];
     var psites_json = {
         identifier: 'id',
         label: 'name',
         items: site_data };
    var pvars_json={
      identifier: 'id',
      label: 'name',
      items: var_data };
#var_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"pvars", :data=>"pvars_json"}
%h2
  = link_to(@project.name, project_path(@project) , :onload=> "$('#loader').toggle();")

%h3 Field Data Measurement Input Form

= form_tag("create_field_measurement", :url => "create", :dojoType=>"dijit.form.Form", :id=>"field_form") do 
  Data Measurement Value: 
  -#=text_field_tag "sensor_value", :dojoType=>"dijit.form.ValidationTextBox", :required=>"true"
  %input{:type=>"text", :id=> "svalue", :name=>"svalue",  :dojoType=>"dijit.form.ValidationTextBox", :required=>"true"}
  =clear_break
  -#%h4{:style=>'margin-top:10px;'} Select A Site:
  #site_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"psites", :data=>"psites_json"}
  %div{:dojoType=>"dijit.form.DropDownButton", :id=>"assign_site_button", :onClick=>'dijit.byId("SiteDisplayGrid").sort();'}
    %span
      Select A Site
    #site_list  
      %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{filter:true}",  :store=>"psites", :clientSort=>"true", :style=>"width: 800px; height: 150px;", :rowSelector=>"20px", :jsId=>"SiteDisplayGrid", :id=>"SiteDisplayGrid", :title=>"Sites"}
   
        %thead
          %tr
            %th{:field=>"name", :width=>"190px", :filterable=>true} Name
            %th{:field=>"code", :width=>"130px", :filterable=>true} Code
            %th{:field=>"latitude", :width=>"100px", :filterable=>true} Lat
            %th{:field=>"longitude", :width=>"100px", :filterable=>true} Long
        %script{:type=>"dojo/method", :event=>"onClick", :args=>"evt"}
          var item = SiteDisplayGrid.selection.getSelected();
          if (item.length < 1){
          //do nothing
          }
          else{
          dijit.byId("site_id").set('value',item[0]["id"]);
          $("#site_span").text(""+item[0]["name"]);
          dijit.byId("assign_site_button").closeDropDown(focus);
          }
  -#= hidden_field_tag(:site_id)
  %input{:type=>"text", :id=> "site_id", :name=>"site_id", :dojoType=>"dijit.form.ValidationTextBox", :required=>"true", :style=>"display: none;"}
  Site Selected:
  %span{:id=>"site_span"}None
  =clear_break
  -@variable_options=""
  -#%h4{:style=>'margin-top:10px;'} Select A Variable:
  %div{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"variableStore", :url=>"#{root_url+"projects/"+@project.id+"/apivs/dojo_variables_for_tree.json?"}"}
  %div{:dojoType=>"dijit.form.DropDownButton", :id=>"assign_variable_button", :onClick=>'dijit.byId("Variablegrid").sort();'}
    %span
      Select A Variable
    #variable_select
      %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{filter:true}",  :store=>"pvars", :clientSort=>"true", :style=>"width: 800px; height: 350px;", :rowSelector=>"20px", :jsId=>"Variablegrid", :id=>"Variablegrid"}
        %thead
          %tr
            -@var_properties.each do |prop|
              %th{:field=>"#{prop.to_s}", :width=>"100px", :filterable=>true}
                #{prop.to_s.capitalize!.gsub("_", " ")}
        %script{:type=>"dojo/method", :event=>"onClick", :args=>"evt"}
          var itemv = Variablegrid.selection.getSelected();
          if (itemv.length < 1){
          //do nothing
          }
          else{
          dijit.byId("variable_id").set('value',itemv[0]["id"]);
          $("#variable_span").text(""+itemv[0]["variable_name"]);
          dijit.byId("assign_variable_button").closeDropDown(focus);
          }
  Variable Selected:
  %span{:id=>"variable_span"}None
  -#= hidden_field_tag(:variable_id)
  %input{:type=>"text", :id=> "variable_id", :name=>"variable_id", :dojoType=>"dijit.form.ValidationTextBox", :required=>"true", :style=>"display: none;"}
  =clear_break
  Select a Timestamp for this Measurement:
  -#=datetime_select("time", "stamp", :default => DateTime.now, :start_year => 1900)
  %input{:type=>"text", :id=> "date", :name=>"date",  :dojoType=>"dijit.form.DateTextBox", :required=>"true"}
  %input{:type=>"text", :id=> "time1", :name=>"time1",  :dojoType=>"dijit.form.TimeTextBox", :required=>"true", :constraints=>"{timePattern : 'HH:mm:ss'}"}
  =clear_break
  Select the Time Zone this Measurement was collected in:
  = time_zone_select("time", "zone", nil, :default => "Mountain Time (US & Canada)", :dojoType=>"dijit.form.Select")
  =clear_break
  Enter the vertical offset for the Measurement:
  %input{:type=>"text", :id=> "vertical_offset", :name=>"vertical_offset",  :dojoType=>"dijit.form.ValidationTextBox", :required=>"true",:value=>0.0}
  =clear_break
  =clear_break
  %button{:id=> 'new_measurement_button',:dojoType=>"dijit.form.Button", :title=>'Create',:type=>"submit"}
    Submit
    %script{:type=>"dojo/method", :event=>"startup"}
      var form = dijit.byId("field_form");
      // set initial state
      this.attr("disabled", !form.isValid());
      this.connect(form, "onValidStateChange", function(state){
      this.attr("disabled", !state);
      });
  = link_to('Cancel', {:action => 'show', :controller => '/projects', :id=>@project.id }, :class => 'icon icon-cancel', :onclick => "$('#loader').toggle();", :onload => "$('#loader').toggle();")

:javascript  
  function checkform()
  {if ($('#vertical_offset').val() =="")
  {
  // something is wrong
  alert('The Vertical Offset field requires a value before this form can be submitted.');
  $('#loader').toggle();
  return false;
  }
  // If the script gets this far through all of your fields
  // without problems, it's ok and you can submit the form
  return true;
  }
