:javascript
  dojo.require("dijit.dijit");
  dojo.require("dijit.form.Button");
  dojo.require("dojox.grid.EnhancedGrid");
  dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
  dojo.require("dojox.grid.enhanced.plugins.Filter");
  dojo.require("dijit.layout.TabContainer");
  dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
  dojo.require("dojo.data.ItemFileWriteStore");
  dojo.require("dojox.grid.enhanced.plugins.exporter.CSVWriter");
  var units = #{@unit_names.to_json}
     
  var variable_json = {
    identifier: 'id',
    items: #{@variables.to_json} };
  var var_store = new dojo.data.ItemFileWriteStore({data: variable_json });
  var site_json = {
    identifier: 'id',
    items: #{@sites.to_json} };
  var site_store = new dojo.data.ItemFileWriteStore({data: site_json }); 
  var api_key = "#{@voeis_api_key.to_s}";
-#%h3{:style=>"margin:5px 0;"}
%h3{:style=>"margin:8px 0 10px 0;"}
  Data Search &mdash; Mulitple Sites &amp; Variables

%strong Select Sites:
#siteGrid{:style=>"width:900px;height:200px;"}
%button(dojoType="dijit.form.Button" name="search_button" id="update_variable_button" onclick="updateVariables();") 
  Filter Variables From Selected Sites
=clear_break
=clear_break
%strong Select Variables:
#varGrid{:style=>"width:900px;height:220px;"}
=clear_break
=clear_break
%p
  %strong
    Data available for:
  -if @start_date.nil? && @end_date.nil?
    &mdash;
  -else
    = @start_date.starting_timestamp.strftime("%m/%d/%Y")
    &ndash;
    = @end_date.ending_timestamp.strftime("%m/%d/%Y")

%div{:style=>"float: left;"}
  %label{:for=>"date1"}
    Start Date Selection:
  %input{:type=>"text", :name=>"start_date", :id=>"start_date", :value=>"#{@end_date.nil? ? Time.now.strftime("%Y-%m-%d") : @end_date.ending_timestamp.nil? ? Time.now.strftime("%Y-%m-%d") : (@end_date.ending_timestamp-1.day).strftime("%Y-%m-%d")}",
      :dojoType=>"dijit.form.DateTextBox", :required=>"true"}
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
%div{:style=>"float: left;"}
  %label{:for=>"date1"}
    End Date Selection:
  %input{:type=>"text", :name=>"end_date", :id=>"end_date", :value=>"#{@end_date.nil? ? Time.now.strftime("%Y-%m-%d") : @end_date.ending_timestamp.nil? ? Time.now.strftime("%Y-%m-%d")  : @end_date.ending_timestamp.strftime("%Y-%m-%d")}",
      :dojoType=>"dijit.form.DateTextBox", :required=>"true"}

=clear_break
-#%p{:id=>"formatted"}
-#=clear_break
-#%p{:id=>"formatted2"}
-#=clear_break
-#%button(dojoType="dijit.form.Button" name="build_query_button" id="build_query_button" onclick="doSearch();") 
-#  Perform Search
%button(dojoType="dijit.form.Button" name="build_query_button" id="build_query_button2" onclick="doSearch();" style="margin:10px 0;")
  Display Search Results
%button(dojoType="dijit.form.Button" name="build_query_button_download" id="build_query_button_download" onclick="doSearchDownload();" style="margin:10px 0;")
  Download Search Results Non-CrossTab
%button(dojoType="dijit.form.Button" name="build_query_button_download_crosstab" id="build_query_button_download_crosstab" onclick="doSearchDownloadCrossTab();" style="margin:10px 0;")
  Download Search Results CrossTab
%button(dojoType="dijit.form.Button" name="build_query_button_count" id="build_query_button_count" onclick="doSearchCount();" style="margin:10px 0;")
  Return Number of Records in Search Results
<br><b>Query URL</b><br/>
#query_string
:javascript
  function updateVariables(){
    site_var_array = siteDataGrid.selection.getSelected();
    site_ids = [];
    for (s in site_var_array){
      site_ids.push(site_var_array[s].id.toString())
    }
    base_url="#{root_url}projects/#{parent.id}/apivs/get_project_site_variables.json?";
    site_url = base_url + "api_key=" + api_key + "&site_ids[]="+ site_ids.join('&site_ids[]=');
    $.get(site_url,
      function(data) {
        var variable_json = {
          identifier: 'id',
          items: data};
        new_var_store = new dojo.data.ItemFileWriteStore({data: variable_json }); 
        varDataGrid.setStore(new_var_store)
      }
    );
  }
  
  function BuildQuery(){
    var site_array = siteDataGrid.selection.getSelected();
    var var_array = varDataGrid.selection.getSelected();
    site_ids = [];
    var_ids = [];
    for (s in site_array){
      site_ids.push(site_array[s].id.toString())
    }
    for (v in var_array){
      var_ids.push(var_array[v].id.toString())
    }
    url = "#{root_url}projects/#{parent.id}/search?site_ids=" + site_ids.join(',');
    url += "&var_ids=" + var_ids.join(',');
    url += "&start_date=" +dijit.byId("start_date").value.format('yyyy-mm-dd')
    url += "&end_date="+dijit.byId("end_date").value.format('yyyy-mm-dd')
    $("#query_string").html(url);
  }
  
  function BuildDownloadCrosstabQuery(){
    var site_array = siteDataGrid.selection.getSelected();
    var var_array = varDataGrid.selection.getSelected();
    site_ids = [];
    var_ids = [];
    for (s in site_array){
      site_ids.push(site_array[s].id.toString())
    }
    for (v in var_array){
      var_ids.push(var_array[v].id.toString())
    }
    url = "#{root_url}projects/#{parent.id}/search.csv?site_ids=" + site_ids.join(',');
    url += "&var_ids=" + var_ids.join(',');
    url += "&start_date=" +dijit.byId("start_date").value.format('yyyy-mm-dd')
    url += "&end_date="+dijit.byId("end_date").value.format('yyyy-mm-dd')
    $("#query_string").html(url);
  }
  
  function BuildDownloadQuery(){
    var site_array = siteDataGrid.selection.getSelected();
    var var_array = varDataGrid.selection.getSelected();
    site_ids = [];
    var_ids = [];
    for (s in site_array){
      site_ids.push(site_array[s].id.toString())
    }
    for (v in var_array){
      var_ids.push(var_array[v].id.toString())
    }
    url = "#{root_url}projects/#{parent.id}/search/download_deq.csv?site_ids=" + site_ids.join(',');
    url += "&var_ids=" + var_ids.join(',');
    url += "&start_date=" +dijit.byId("start_date").value.format('yyyy-mm-dd')
    url += "&end_date="+dijit.byId("end_date").value.format('yyyy-mm-dd')
    $("#query_string").html(url);
  }
  function BuildCountQuery(){
    var site_array = siteDataGrid.selection.getSelected();
    var var_array = varDataGrid.selection.getSelected();
    site_ids = [];
    var_ids = [];
    for (s in site_array){
      site_ids.push(site_array[s].id.toString())
    }
    for (v in var_array){
      var_ids.push(var_array[v].id.toString())
    }
    url = "#{root_url}projects/#{parent.id}/search/quick_count.json?site_ids=" + site_ids.join(',');
    url += "&var_ids=" + var_ids.join(',');
    url += "&start_date=" +dijit.byId("start_date").value.format('yyyy-mm-dd')
    url += "&end_date="+dijit.byId("end_date").value.format('yyyy-mm-dd')
    $("#query_string").html(url);
  }
  function doSearch(){
    
    BuildCountQuery()
    //window.location=$("#query_string").html();
     $.get($("#query_string").html(), function(data){
        if (confirm("Are you sure you want to get " + data['count'] + " records?")){
          BuildQuery();
          window.open($("#query_string").html(), "Search Results "+projectSearchCount.toString(),'',false);
          projectSearchCount = projectSearchCount +1;
        }
      });
    
    //dojo.publish('voeis/project/search/results', [$("#query_string").html()])
  }
  function doSearch2(){
    BuildQuery();
    //window.location=$("#query_string").html();
    //window.open($("#query_string").html(), "Search Results",'','false');
    dojo.publish('voeis/project/search/results', [$("#query_string").html()])
  }
  
  function doSearchDownload(){
    
    BuildCountQuery()
    $.get($("#query_string").html(), function(data){
      if (confirm("Are you sure you want to get " + data['count'] + " records?")){
        BuildDownloadQuery();
        window.location = $("#query_string").html();
      }
    });
    
  }
  function doSearchDownloadCrossTab(){
    
    BuildCountQuery()
    $.get($("#query_string").html(), function(data){
      if (confirm("Are you sure you want to get " + data['count'] + " records?")){
        BuildDownloadCrosstabQuery();
          window.location = $("#query_string").html();
      }
    });
  }
  function doSearchCount(){
    BuildCountQuery()
    $.get($("#query_string").html(), function(data){
        alert("This search yields: " + data['count'] + " records");
    });
  }
  //formatter: 'val_grid_formatter.dateTime',
  // grid formatters
  var val_grid_formatter = {};
  val_grid_formatter.dateTime = function(value) {
    if(value==null || value=='') return '-';
    // Format DateTime string
    var d = new Date(value);
    //var fmt = d.getMonth()+'/'+d.getFullYear()
    return dojo.date.locale.format(d,{datePattern:"yyyy-MM-dd", timePattern:"HH:mm:ss z"});
  };
  val_grid_formatter.selectItem = function(item) {
    //var checked_img = '<img src="/images/notice.png" alt="SELCT" />';
    //var selected_img = '<img src="/images/1abu007.gif" alt="SELCT" />';
    var blank_img = '<img src="/images/blank.gif" width="16" height="16" />';
  
    //if(siteDataGrid.value_selected(item)) 
    //  return selected_img;
    return blank_img;
  };
  
  val_grid_formatter.unit_name = function(value){
    return units[value]
  }
  var site_layout = [
  {
     field: '_item',
     name: '-',
     formatter: val_grid_formatter.selectItem,
     width: '24px'
  },
  {
     field: 'id',
     name: 'ID',
     width: '40px'
  },
  {
     field: 'name',
     name: 'Name',
     width: 'auto'
  }
  ];
  var var_layout = [
  {
     field: '_item',
     name: '-',
     formatter: val_grid_formatter.selectItem,
     width: '24px'
  },
  {
     field: 'id',
     name: 'ID',
     width: '40px'
  },
  {
     field: 'variable_name',
     name: 'Name',
     width: 'auto'
  },
  {
     field: 'variable_units_id',
     name: 'Units',
     formatter: val_grid_formatter.unit_name,
     width: 'auto'
  },
  {
     field: 'general_category',
     name: 'Category',
     width: 'auto'
  },
  {
     field: 'sample_medium',
     name: 'Medium',
     width: 'auto'
  },
  {
     field: 'value_type',
     name: 'Value Type',
     width: 'auto'
  },
  {
     field: 'data_type',
     name: 'Data Type',
     width: 'auto'
  },
  ];
  
  
  // create a new site grid:
  siteDataGrid = new dojox.grid.EnhancedGrid({
     store: site_store,
     clientSort: true,
     rowSelector: '0',
     structure: site_layout,
     style: 'width:95%;',
     plugins: {filter:true, exporter:true,indirectSelection:{headerSelector:true, width:"40px", styles:"text-align: center;"},
      },
      onClick: function(ev) {
        this.grid_click = ev;
      },
     },
     document.createElement('div'));

  // append the new grid to the div " ":
  $('#siteGrid').append(siteDataGrid.domNode);
  siteDataGrid.startup();
  
  //create a new variable grid
  varDataGrid = new dojox.grid.EnhancedGrid({
     store: var_store,
     grid_click: true,
     clientSort: true,
     rowSelector: '0',
     structure: var_layout,
     style: 'width:95%;',
     plugins: {filter:true, exporter:true,indirectSelection:{headerSelector:true, width:"40px", styles:"text-align: center;"},
      },
      onClick: function(ev) {
        this.grid_click = ev;
      },
     },
     document.createElement('div'));

  // append the new grid to the div " ":
  $('#varGrid').append(varDataGrid.domNode);
  varDataGrid.startup();

%br
%br
