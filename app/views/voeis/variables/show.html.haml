:css
  #content { margin:10px 50px }
  #wrapper {
    padding-bottom: 20px;
    background-color: #ccb;
    padding-top: 1px;
  }
  #wrapper img { margin-right:12px }
  #wrapper p { margin:0 20px }

  #site00-sample-table td { text-align:center; }
  #site00-sample-table td.time0 { text-align:left; }

  #form-table { width:600px; }
  #form-table td { width:50%; }
  .form_element { width:20em; }
  
  .dijitTextBox { width:18em !important; }
  .TextBox_qcval { width:5em !important; }
  .TextBox_time { width:10em !important; }
  .TextBox_half { width:10em !important; }
  .TextBox_value { width:18em !important; }
  
  .new_voeis_site input { width:18em; }
  .new_voeis_site textarea { width:45em; }
  .new_voeis_site select { width:21em; }

  .row-lt1 { background-color:#ddd; }
  .row-gr { background-color: #6AA128; }
  .row-gr { background-color: #97C253; }
  .row-gr { background-color: #97D8AB; }
  .row-gr th { background-color: #97D8AB!important; }
  .row-gr td { background-color: #97D8AB!important; }
  .smfont, .smfont * { font-size:10px }


-#- not_browse = (request.fullpath =~ /\/projects\/?$/).nil?
- siteId0 = @site.nil? ? "0" : @site.id.to_s
- siteId = "site"+siteId0
- varId = siteId+'_var'+@variable[:id].to_s

= javascript_include_tag("jquery.flot.js")
- content_for(:javascripts) do
  :javascript
    dojo.require("dijit.dijit");
    dojo.require("dijit.Declaration");
    dojo.require("dojox.layout.TableContainer");
    dojo.require("dijit.form.TextBox");
    
    //GLOBALS
    //var variable = #{@variable.to_json};
    //var var_id = parseInt(variable.id);
    //var site_id = parseInt(#{@site.nil? ? 0 : @site.id});
    //var this_pane_id, this_pane;
    
    $(window).ready(function(){ 
      //##### 
      console.log('READY-load-done-NOW');
      initPage();
    });
    

-#-if @var_id>0 && siteId0!='0'
-#- if @var_id>0 && @site_id>0
-#  %div(data-dojo-type="dijit.Toolbar" style="height:25px!important;margin: 0 0 15px 0;" id="#{varId}-toolbar")
-#    -#%strong VARIABLE DETAILS
-#    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-#    -#%span(data-dojo-type="dijit.ToolbarSeparator")
-#    %span(data-dojo-type="dijit.form.ToggleButton" jsId="#{varId}_editbutton")
-#      = link_to('Edit', 'javascript:', :onclick=>"if(#{varId}_editbutton.checked){dijit.byId('#{varId}').cancel_edit(true);}else{$('##{varId}_show').hide();$('##{varId}_edit').show();}")
-#    %span(data-dojo-type="dijit.ToolbarSeparator")
-#    %span(data-dojo-type="dijit.form.Button")
-#      = link_to('History', 'javascript:', :onclick=>"dojo.publish('voeis/project/variable/history', [#{@variable.id},'#{@variable.variable_name}',#{siteId0},'#{siteId}_tabs']);")
-#    %span(data-dojo-type="dijit.ToolbarSeparator")
-#    
-#  -#%h3{:style=>"margin:10px 0 0 0;"}
-#  -#  %span.small{:style=>"font-size:14px;"}
-#  -#    VARIABLE DETAILS:
-#  -#  #{@site.name}: #{@variable.variable_name}
-#
-#- else
-#  -#%h3{:style=>"margin-top:0;"}
-#  %h3{:style=>"margin:0;"}
-#    - if @var_id>0
-#      %span.small{:style=>"font-size:14px;"}
-#        EDIT:
-#      = @variable.variable_name
-#    - else
-#      NEW VARIABLE
    

- if @var_id>0 && @site_id>0
  %div{:id=>"#{varId}_show", :style=>""}
      
    -#%strong VARIABLE DETAILS
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#-if @auth && @site
    -#  %span{:id=>"#{varId}_buttons"}
    -#    = link_to('EDIT', 'javascript:', :class=>'icon icon-edit', :onclick=>"$('##{varId}_show').hide();$('##{varId}_edit').show();")
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#= link_to('HISTORY', 'javascript:', :class=>'icon icon-hist', :onclick=>"dojo.publish('voeis/project/variable/history', [#{@variable.id},'#{@variable.variable_name}',#{@site.id}]);")
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    
    
    -#= link_to('DATA', 'javascript:', :class=>'icon icon-proj', :onclick=>"dojo.publish('voeis/project/site/history', [$$$id$$$]);")
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#= link_to('SAMPLES', 'javascript:', :class=>'icon icon-proj', :onclick=>"dojo.publish('voeis/project/site/history', [$$$id$$$]);")
    %br
    %br
    -#placeholder{:style=>"width:300px;height:150px;"}

    -#%strong
    -#  UNITS:
    -#- if !@units.nil?
    -#  #{@units[:units_abbreviation]} (#{@units[:units_type]})
    -#- else
    -#  UNKNOWN
    -#%br
    -#%br
    
    -#%strong
    -#  = "#{@variable.variable_name} [Id:#{@variable.id}]"
  
    %table{:id => "property-table", :style=>'width:45%;float:left;margin-right:15px;'}
      -if @site
        %tr{:class=>"row#{cycle('1','0')}"}
          %td{:style=>"text-align:right;width:30%;"}
            %strong
              Site
          %td
            #{'%s [Id:%s]'%[@site.site_name,@site.id]}
      - @variable_properties.each do |prop|
        %tr{:class=>"row#{cycle('1','0')}"}
          %td{:style=>"text-align:right;width:30%;"}
            %strong
              #{prop[:label]}
          %td
            #{@variable_ref[prop[:name].to_sym]}
            -#{@variable[prop.name]}
  
    -if @site
      %div{:style=>"width:50%;margin:0;float:left;"}
        %div{:id=>"graph-site"+@site.id.to_s+"-var"+@variable.id.to_s, :style=>"width:300px;width:70%;height:150px;margin:0 0 25px 50px;"}
    
        %br
    
        -# COLLECTED DATA STATS
        -# COMMENTED OUT because lack of SITE ID to select
        - var_stats = @site_variable_stats.first(:variable_id=>@variable.id)
        -unless var_stats.nil?
          %table{:id => "var-stats-table", :style=>'float:left;margin-left:5px;width:90%'}
            %tr{:class=>"row#{cycle('0','1')}"}
              %td{:colspan=>"2"}
                %h4{:style=>"margin:0 0 5px 0;"}
                  Collected Data
            %tr{:class=>"row-gr"}
              %td
                %b
                  &nbsp;&nbsp; Count
              %td
                = var_stats.record_number
            %tr{:class=>""}
              %td
                %b
                  &nbsp;&nbsp; Starting
              %td
                = var_stats.starting_timestamp.nil? ? 'NA' : var_stats.starting_timestamp.strftime('%d/%m/%Y')
            %tr{:class=>"row-gr"}
              %td
                %b
                  &nbsp;&nbsp; Ending
              %td
                = var_stats.ending_timestamp.nil? ? 'NA' : var_stats.ending_timestamp.strftime('%d/%m/%Y')
            %tr
              %td{:colspan=>"2"}
                %h4{:style=>"margin:20px 0 5px 0;"}
                  Recent Data Values
            %tr{:class=>"row-gr"}
              %th
                Timestamp
              %th
                Value   
            -if !@data.nil?
              -@data.each do |dv|
                %tr{:class=>"row-lt#{cycle('0','1')} smfont",:style=>""}
                  %td{:style=>"text-align:center;"}
                    = dv[0].strftime('%Y-%m-%d %H:%M:%S')
                  %td
                    %strong
                      = dv[1].to_s+' '
                    &nbsp;#{@units[:units_abbreviation]} (#{@units[:units_type]})
                    = "["+dv[2]+"]"
  
  %br{:style=>'float:none; clear:both;'}


:javascript
  TEST = 'TESTING ShowVariable';
  console.log('varShow javascript--');
  
  var date_formatter = function(value) {
    if(value==null || value=='') return '-';
    // Format DateTime string
    var d = new Date(value);
    //var fmt = d.getMonth()+'/'+d.getFullYear()
    return dojo.date.locale.format(d,{datePattern:"yyyy-MM-dd", timePattern:"HH:mm:ss z"});
  };
  
  function initPage() {
    console.log('varShow initPage: NOW');
    console.log('SITE-ID=', '#{@site_id}');
    console.log('VAR-ID=', '#{@var_id}');
    
    //this_pane_id = '#{@project.id}-site'+site_id+'-var'+var_id;
    //this_pane = dojo.byId(this_pane_id);
    //if(this_pane) this_pane = dijit.byNode(this_pane);
    
    console.log('VAR_ID=', '#{@var_id}');
    //if(parseInt(#{@var_id})) graphInit(variable.id, variable.variable_name);
    #{varId}_gdata = #{@graph_data.to_json};
    if(parseInt(#{@site_id})) graphInit(#{@site_id},#{@variable[:id].to_s},'#{@variable[:variable_name]}',#{varId}_gdata);
    console.log('initPage: DONE');
  };

- if @site_id>0
  :javascript
    //var gdata = #{@variable.last_ten_values_graph(@site).to_json};
    var #{varId}_gdata = #{@graph_data.to_json};
    #{varId}_gdata = #{varId}_gdata || {};

    //graphInit();
    var graphInit = function(siteId,varId,varName,gdata) {
        gdata = gdata || {};
        console.log('>>>graphInit');
        console.log('GDATA= ', gdata);
        console.log('TEST= ', TEST);
        plotGraph(gdata,siteId,varId);
        handleGraph(varName);
    };
    var plotGraph = function(gdata,siteId,varId) {
        //console.debug(gdata);
        //console.log('GDATA= ', gdata);
        console.log('>>>plotGraph:', TEST);
        var plot = $.plot($("#graph-site"+siteId+"-var"+varId), [gdata],{
            series: {
                color : "blue",
                lines: { show: true },
                points: { show: true }
            },
            ticks: 12,
            grid:  { hoverable: true, clickable: true },
            xaxis: { mode: "time" },
            pan:   { interactive: true },
            zoom:  { interactive: true }
        });
    };

    //Function ShowToolTip and previousPoint allow the hover function to display
    //a message for each data point on the graph when the cursor hoversover

    //I would only mess with the css if you really need to otherwise this
    //shouldn't need any modification
    var showTooltip = function(x, y, contents) {
        //console.log('>>>tooltip:',contents);
        //var divpos = $("body ##{varId}_show").offset();
        //x = x - divpos.left;
        //y = y - divpos.top;
        $('<div id="tooltip">' + contents + '</div>').css( {
            position: 'absolute',
            //'min-width': '50%',
            display: 'none',
            //overflow: 'visible',
            'z-index': 1000,
            top: y + 5,
            left: x + 5,
            border: '1px solid #fdd',
            padding: '2px',
            'background-color': '#fee',
            opacity: 0.80
        }).appendTo("body").fadeIn(200);
        //}).appendTo("body ##{varId}_show").fadeIn(200);
    };

    //Most of this should remain the same
    //NOTE-- the time string for #x is in UTC format and currently is in GMT time
    var handleGraph = function(variable_name) {
        console.log('>>>handleGraph');
        var previousPoint = null;
        //$("#graph#{@variable.id.to_s}").bind("plothover", function (event, pos, item) {
        $("#{"#graph-site"+@site.id.to_s+"-var"+@variable.id.to_s}").bind("plothover", function (event, pos, item) {
            var mEpoch = pos.x; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)
            dDate = new Date();
            dDate.setTime(mEpoch);
            //console.log('>>>plothover');
            $("#x").text(dDate.toLocaleString());
            $("#y").text(pos.y);

            if (item) {
                if (previousPoint != item.datapoint) {
                    previousPoint = item.datapoint;
                    $("#tooltip").remove();
                    var x = item.datapoint[0].toFixed(2),
                    y = item.datapoint[1].toFixed(2);
                    var mEpoch = x; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)
                    dDate = new Date();
                    dDate.setTime(mEpoch);
                    showTooltip(item.pageX, item.pageY,
                    //*****You will need to change the sensor name here to the appropriate one selected above
                        //***dDate.toLocaleString() + " = " + y + " " + "#{@variable.variable_name}|" );
                        date_formatter(dDate.toLocaleString())+" = "+y+" "+variable_name+" | #{@units.units_name}");
                };
            } else {
                $("#tooltip").remove();
                previousPoint = null;            
            }
        });
    };


-if @auth && @site_id==0
  %div{:id=>"#{varId}_edit", :style=>"width:900px;#{(@var_id>0 && @site_id>0) ? 'display:none;' : ''}"}

    %p(style="margin:8px 0 8px 0;padding:0;font-weight:bold;")
      = @variable.id==0 ? "NEW VARIABLE" : "EDIT: #{@variable.variable_name} [Id:#{@variable.id}]"
    &nbsp;&nbsp; (* Required Fields)
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#%span(class="#{varId}_cancel_buttons")
    -#  -#= link_to('CANCEL EDIT', 'javascript:', :class=>'icon icon-edit', :onclick=>"dijit.byId('#{varId}').cancel_edit();")
    -#  %button(dojoType="dijit.form.Button" value="Cancel" onclick="dijit.byId('#{varId}').cancel_edit();") Cancel
  
    -#%form(accept-charset="UTF-8" action="/projects/b6db01d0-e606-11df-863f-6e9ffb75bc80/sites/$$$id$$$" class="new_voeis_site" data-remote="true" id="site00-edit-form" method="put")
    %form(accept-charset="UTF-8" class="new_voeis_site" data-remote="true" id="#{varId}-edit-form" jsId="#{varId}_edit_form" dojoType="dijit.form.Form")

      %table{:id=>"form-table"}
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Variable Name','variable_name','#{project_path(@project)}/variable_name_c_vs/list','#{varId}_var_name_sel');return false;"}
                  %label{:for=>"var_name", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Variable Name *
              -#%input(name="var_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.variable_name}" required="true")
              -#%select(name="var_name"  dojoType="dijit.form.Select")
              %select(name="var_name" class="variable_name_select" id="#{varId}_var_name_sel")
                = options_for_select(@var_names.all.map{|v| [v.term, v.term]}, 
                      selected=@variable.variable_name.to_s)
          %td{:colspan=>"2"}
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_code"} Variable Code *
              %input(name="var_code" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.variable_code}" required="true")
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Sample Medium','sample_medium','#{project_path(@project)}/sample_medium_c_vs/list','#{varId}_var_medium_sel');return false;"}
                  %label{:for=>"var_medium", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Sample Medium *
              -#%input(name="var_medium" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.sample_medium}" required="true")
              %select(name="var_medium" class="sample_medium_select" id="#{varId}_var_medium_sel")
                = options_for_select(@var_medium.all.map{|v| [v.term,v.term]}, selected=@variable.sample_medium)
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_units"} Units *
            %select(name="var_units")
              = options_for_select(@units_all.map{|u| [u.type_format,u.id]}, selected=@variable.variable_units_id)
              -#- @units_all.each do |item|
              -#  %option(value="#{item.id}") #{item.type_format}
      
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Value Type','value_type','#{project_path(@project)}/value_type_c_vs/list','#{varId}_var_vtype_sel');return false;"}
                  %label{:for=>"var_vtype", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Value Type *
              -#%input(name="var_vtype" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.value_type}" required="true")
              -#%select(name="var_vtype"  dojoType="dijit.form.Select")
              %select(name="var_vtype" class="value_type_select" id="#{varId}_var_vtype_sel")
                = options_for_select(@var_vtypes.all.map{|v| [v.term,v.term]}, 
                      selected=@variable.value_type.to_s)
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('General Category','general_category','#{project_path(@project)}/general_category_c_vs/list','#{varId}_var_gcat_sel');return false;"}
                  %label{:for=>"var_gcat", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    General Category *
              -#%input(name="var_gcat" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.general_category}" required="true")
              %select(name="var_gcat" class="general_category_select" id="#{varId}_var_gcat_sel")
                = options_for_select(@var_gcat.all.map{|v| [v.term,v.term]}, selected=@variable.general_category)

        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Data Type','data_type','#{project_path(@project)}/data_type_c_vs/list','#{varId}_var_dtype_sel');return false;"}
                  %label{:for=>"var_dtype", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Data Type *
              -#%input(name="var_dtype" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.data_type}" required="true")
              -#%select(name="var_dtype"  dojoType="dijit.form.Select")
              %select(name="var_dtype" class="data_type_select" id="#{varId}_var_dtype_sel")
                = options_for_select(@var_dtypes.all.map{|v| [v.term,v.term]}, selected=@variable.data_type)
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Speciation','speciation','#{project_path(@project)}/speciation_c_vs/list','#{varId}_var_spec_sel');return false;"}
                  %label{:for=>"var_spec", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Speciation *
              -#%input(name="var_spec" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.speciation}" required="true")
              %select(name="var_spec" class="speciation_select" id="#{varId}_var_spec_sel")
                = options_for_select(@var_spec.all.map{|v| [v.term,v.term]}, selected=@variable.speciation)

        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %a{:href=>"javascript:", :onclick=>"cv_pop_new('Quality Control Level','quality_control_level','#{project_path(@project)}/quality_control_levels/list','#{varId}_var_qcval_sel');return false;"}
                  %label{:for=>"var_qcval", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                    Quality Control *
              -#%input(name="var_qcval" class="TextBox_half" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'########'}" type="text" value="#{@variable.quality_control}" required="true")
              -#%select(name="var_qcval"  dojoType="dijit.form.Select")
              %select(name="var_qcval" class="quality_control_level_select" id="#{varId}_var_qcval_sel")
                = options_for_select(@var_qcvalues.all.map{|v| ["%s: %s"%[v.quality_control_level_code,v.definition[0..30]], 
                        v.quality_control_level_code.to_i]}, selected=@variable.quality_control.to_i)

        %tr{:style=>"height:70px; background-color:#eee;"}
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_time_support"}
                  %strong Time Support
                  %br
                  Interval (0 for none) *
              %input(name="var_time_support" class="TextBox_half" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'#######.####'}" type="text" value="#{@variable.time_support}" required="true")
              &nbsp;&nbsp;&nbsp;
              -#%input(name="var_reg" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.is_regular}" required="true")
              %input(name="var_regular" dojoType="dijit.form.CheckBox" checked="#{@variable.is_regular}")
              Regular
      
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_time_units"} Interval Units
            %select(name="var_time_units")
              = options_for_select(@units_all.all(:units_type=>'Time').map{|u| [u.units_name,u.id]}, selected=@variable.time_units_id)
            -#- @units_all.all(:units_type=>'Time').each do |item|
            -#  %option(value="#{item.id}") #{item.units_name}
      
        %tr
          %td{:colspan=>"2"}
            .from-element{:style=>"cursor:pointer;"}
              -#%span{:class=>'label', :style=>"cursor:pointer;"}
              %a{:href=>"javascript:", :onclick=>"thisForm=#{varId}_edit_form;var_new_lab.show();"}
                -#%label{:for=>"site_vertical_datum", :style=>"cursor:pointer;", :class=>"icon icon-add", :onclick=>"dijit.byNode(dojo.byId('site00')).showDialog('site00_xnew_vertical_datum');"}
                %label{:for=>"var_lab", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                  Laboratory
            %select(name="var_lab")
              %option(value="0") NA
              = options_for_select(@laboratories.map{|item| [item.lab_name,item.id]}, selected=@variable.lab_id)
              -#- @laboratories.each do |item|
              -#  %option(value="#{item.id}") #{'%s (%s)'%[item.lab_name,item.lab_organization]}
      
        %tr
          %td
            .from-element{:style=>"cursor:pointer;"}
              -#%span{:class=>'label', :style=>"cursor:pointer;"}
              %a{:href=>"javascript:", :onclick=>"thisForm=#{varId}_edit_form;var_new_lab_method.show();"}
                -#%label{:for=>"site_vertical_datum", :style=>"cursor:pointer;", :class=>"icon icon-add", :onclick=>"dijit.byNode(dojo.byId('site00')).showDialog('site00_xnew_vertical_datum');"}
                %label{:for=>"var_lab_method", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                  Lab Method
            %select(name="var_lab_method")
              %option(value="0") NA
              = options_for_select(@lab_methods.map{|m| [m.lab_method_name,m.id]}, selected=@variable.lab_method_id)
              -#- @lab_methods.each do |item|
              -#  %option(value="#{item.id}") #{item.lab_method_name}
      
          %td
            .from-element{:style=>"cursor:pointer;"}
              -#%span{:class=>'label', :style=>"cursor:pointer;"}
              %a{:href=>"javascript:", :onclick=>"thisForm=#{varId}_edit_form;var_new_field_method.show();"}
                -#%label{:for=>"site_vertical_datum", :style=>"cursor:pointer;", :class=>"icon icon-add", :onclick=>"dijit.byNode(dojo.byId('site00')).showDialog('site00_xnew_vertical_datum');"}
                %label{:for=>"var_field_method", :style=>"cursor:pointer;", :class=>"label icon icon-add"}
                  Field Method
            %select(name="var_field_method")
              %option(value="0") NA
              = options_for_select(@field_methods.map{|m| [m.method_name,m.id]}, selected=@variable.field_method_id)
              -#- @field_methods.each do |item|
              -#  %option(value="#{item.id}") #{item.method_name}
      
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_spat_type"} Spatial Offset Type
              %input(name="var_spat_type" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.spatial_offset_type}" required="false")
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_spat_value"} Spatial Offset Value
              %input(name="var_spat_value" class="TextBox_value" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'########.######'}" type="text" value="#{@variable.spatial_offset_value}" required="false")
        %tr
          %td{:colspan=>"2"}
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_spat_units"} Spatial Units
            %select(name="var_spat_units")
              %option(value="0") NA
              = options_for_select(@units_all.all(:units_type=>'Length').map{|u| [u.units_name,u.id]}, selected=@variable.spatial_units_id)
              -#- @units_all.all(:units_type=>'Length').each do |item|
              -#  %option(value="#{item.id}") #{item.units_name}
      
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_null"} Null Value *
              %input(name="var_null" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.no_data_value}" required="true")
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_detlimit"} Detection Limit
              %input(name="var_detlimit" class="TextBox_value" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'#######.####'}" type="text" value="#{@variable.detection_limit}" required="false")
      
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_log_type"} Logger Type
              -#%input(name="var_log_type" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.logger_type}" required="false")
              %select(name="var_log_type" class="log_type_select" id="#{varId}_var_log_type_sel")
                = options_for_select(@var_log_type.all.map{|v| [v.term,v.term]}, selected=@variable.logger_type)
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_log_id"} Logger ID
              %input(name="var_log_id" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.logger_id}" required="false")
        %tr
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_sens_type"} Sensor Type
              -#%input(name="var_sens_type" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.sensor_type}" required="false")
              %select(name="var_sens_type" class="sens_type_select" id="#{varId}_var_sens_type_sel")
                = options_for_select(@var_sens_type.all.map{|v| [v.term,v.term]}, selected=@variable.sensor_type)
          %td
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_sens_id"} Sensor ID
              %input(name="var_sens_id" class="TextBox_name" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.sensor_id}" required="false")
        %tr
          %td{:colspan=>"2"}
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_his_id"} HIS ID
              %input(name="var_his_id" class="TextBox_value" dojoType="dijit.form.NumberTextBox" type="text" value="#{@variable.his_id}" required="false")
              -#%input(name="var_his_id" class="TextBox_value" dojoType="dijit.form.ValidationTextBox" type="text" value="#{@variable.his_id}" required="false")
      
        %tr{:id=>"#{varId}-provenance-row"}
          %td{:colspan=>"2"}
            .from-element
              %span{:class=>'label'}
                %label{:for=>"var_provenance_comment"} Provenance Comment
            -#%textarea( name="var_provenance_comment" rows="2")
            %input(name="var_provenance_comment" dojoType="dijit.form.SimpleTextarea" rows="3" 
                  style="width:45em!important;line-height:16px!important;")
      
        %tr
          %td{:colspan=>"2"}
            %br
            %button(dojoType="dijit.form.Button" name="commit" value="Save Site" disabled="true") 
              Save Variable
              %script{:type=>"dojo/method", :event=>"startup"}
                :plain
                  var form = #{varId}_edit_form;
                  var variable = #{@variable.to_json};
                  var var_id = parseInt(variable.id);
                  var site_id = parseInt(#{@site.nil? ? 0 : @site.id});
                  //var this_pane_id = '#{@project.id}-var'+var_id;
                  if(site_id || var_id) {
                    var this_pane_id = 'site#{@site_id}_var'+var_id;
                  } else {
                    var this_pane_id = 'new_project_variables';
                    //$('.#{varId}_cancel_buttons').hide();
                    $('##{varId}-provenance-row').hide();
                    //if(parseInt(#{@var_id})==0) $('##{varId}-provenance-row').hide();
                  };
                  var this_pane = dijit.byId(this_pane_id);
                  if(!this_pane) {
                    this_pane = dojo.byId(this_pane_id);
                    if(!this_pane) {
                      //BAD! ERR! -lets blow!
                      console.log('NO VAR PANE!!');
                      return;
                    };
                    this_pane = dijit.byNode(this_pane);
                  };
                  console.log('INIT-FORM:',form);
                  console.log('FOR VAR:',variable);
                  console.log('PANE ID:',this_pane_id);
                  console.log('THIS PANE:',this_pane);
                  console.log('siteId=#{siteId}');
                  console.log('varId=#{varId}');
                  console.log('@var_id=#{@var_id}');
                  //if(parseInt(#{@var_id})) graphInit(variable.id,variable.name,#{varId}_gdata);
                  //else $('##{varId}-provenance-row').hide();
                  this_pane.var_id = var_id;
                  this_pane.cancel_edit = function() {
                    console.log('CANCEL! - #{varId}');
                    var varID = '#{varId}';
                    var this_pane = dijit.byId('#{varId}');
                    console.log('CANCEL_THIS_PANE:',this_pane);
                    //###SCROLL TO TOP
                    //window.scrollTo(0,0);
                    $('html #main_container').animate({scrollTop:0}, 'slow');//IE, FF
                    $('body #main_container').animate({scrollTop:0}, 'slow');//chrome, don't know if safary works
                    if(parseInt(#{@var_id}) && parseInt(#{@site_id})) {
                      var elems = #{varId}_edit_form.domNode.elements;
                      $(elems['var_units']).val(#{@variable.variable_units_id});
                      $(elems['var_time_units']).val(#{@variable.time_units_id});
                      $(elems['var_lab']).val(#{@variable.lab_id});
                      $(elems['var_lab_method']).val(#{@variable.lab_method_id});
                      $(elems['var_field_method']).val(#{@variable.field_method_id});
                      $(elems['var_spat_units']).val(#{@variable.spatial_units_id});
                      //if(!toggle_edit) #{varId}_editbutton.set('checked',false);
                      $('#'+varID+'_edit').hide();
                      $('#'+varID+'_show').show();
                    } else {
                      var tabs = dijit.byId('project_variables_tabs');
                      //if(parseInt(#{@site_id})) var to_pane = dijit.byId('#{@site_id}');
                      var to_pane = dijit.byId('vars_project_variables');
                      if(to_pane) tabs.selectChild(to_pane);
                      if(parseInt(#{@var_id})) refreshTab('var#{@var_id}-history');
                      tabs.removeChild(this_pane);
                      //this_pane.onClose();
                      console.log('close-pane:',this_pane);
                      this_pane.destroyRecursive(false);
                    };
                  };
                  this_pane.connect(this_pane, "onShow", function(state){
                    if(parseInt(#{@var_id}) && parseInt(#{@site_id}))
                      graphInit(site_id,variable.id,variable.name,#{varId}_gdata);
                  });
                  var form0 = form.domNode;
                  //var pane = dijit.byNode(dojo.byId('site00'));
                  //eval('var pane = site00ref');
                  //var site_pane = window['#{siteId}ref']
                  //var site = site_pane.site;
                  console.log('GO VAR_UPDATE:',this_pane);
                  //INITIALIZE: submit button
                  if(var_id) this.attr("disabled", !form.validate());
                  form0.elements['var_name'].focus();
                  //IS FORM VALID?
                  console.log('FORM-CONNECT: '+site_id);
                  //###ON-STATE-CHANGE
                  this.connect(form, "onValidStateChange", function(state){
                    //console.log('formStateChange:',state);
                    this.attr("disabled", !state);
                  });
                  //###ON-SUBMIT: SAVE
                  this.connect(this, "onClick", function(){
                    console.log('CREATE VAR: '+variable.id);
                    //###SCROLL TO TOP
                    //window.scrollTo(0,0);
                    $('html #main_container').animate({scrollTop:0}, 'slow');//IE, FF
                    $('body #main_container').animate({scrollTop:0}, 'slow');//chrome, don't know if safary works
                    var data = {variable:{
                      variable_name:form0.elements['var_name'].value, 
                      variable_code:form0.elements['var_code'].value, 
                      sample_medium:form0.elements['var_medium'].value, 
                      variable_units_id:form0.elements['var_units'].value, 
                      general_category:form0.elements['var_gcat'].value, 
                      value_type:form0.elements['var_vtype'].value, 
                      speciation:form0.elements['var_spec'].value, 
                      data_type:form0.elements['var_dtype'].value, 
                      quality_control:form0.elements['var_qcval'].value, 
                      time_support:form0.elements['var_time_support'].value, 
                      is_regular:form0.elements['var_regular'].value=='on' ? 'true' : 'false', 
                      time_units_id:form0.elements['var_time_units'].value, 
                      lab_id:form0.elements['var_lab'].value, 
                      lab_method_id:form0.elements['var_lab_method'].value, 
                      field_method_id:form0.elements['var_field_method'].value, 
                      spatial_offset_type:form0.elements['var_spat_type'].value, 
                      spatial_offset_value:form0.elements['var_spat_value'].value, 
                      spatial_units_id:form0.elements['var_spat_units'].value, 
                      no_data_value:form0.elements['var_null'].value, 
                      detection_limit:form0.elements['var_detlimit'].value, 
                      logger_type:form0.elements['var_log_type'].value, 
                      logger_id:form0.elements['var_log_id'].value, 
                      sensor_type:form0.elements['var_sens_type'].value, 
                      sensor_id:form0.elements['var_sens_id'].value,
                      his_id:form0.elements['var_his_id'].value, 
                      provenance_comment:form0.elements['var_provenance_comment'].value, 
                    }};
                    //console.log('LatLongDatum ID:',pane.local.lat_long_datum_dd.value,pane.local.lat_long_datum_dd.text());
                    //console.log('VerticalDatum ID:',pane.local.vertical_datum_dd.value,pane.local.vertical_datum_dd.text());
                    //console.log('LocalProjection ID:',pane.local.local_projection_dd.value,pane.local.local_projection_dd.text());
                    if(var_id) {
                      //###EDIT VAR
                      var post_type = 'PUT';
                      var post_url = '/projects/#{@project.id}/variables/'+var_id+'.json';
                      //data.variable['id'] = var_id.toString();
                    } else {
                      //###NEW VAR (var_id==0)
                      var post_type = 'POST';
                      var post_url = '/projects/#{@project.id}/variables.json';
                    };
                    $.ajax({
                      type: post_type,
                      url: post_url,
                      data: data,
                      success: function(newValue){
                        //callback
                        if(site_id) {
                          if(var_id) {
                            //###EDIT VAR
                            this_pane.refresh();
                            return;
                          };
                          data.variable['id'] = parseInt(newValue.id);
                          var var_data = {
                            varname: data.variable.variable_name,
                            varid: data.variable.id,
                            varunits: data.variable.variable_units.untis_abbreviation+' ('+data.variable.data_type+')',
                            count: 0,
                            first: 'NA',
                            last: 'NA'};
                          site_var_data[site_id-1].append(var_data);
                          var site_pane = window['#{siteId}ref'];
                          if(site_pane) site_pane.siteUpdate();
                        };
                        //#{varId}_cancel_edit();
                        dijit.byId('#{varId}').cancel_edit();
                      },
                      dataType: 'json'
                    });
                    return false;
                  });
            
            -#%span(class="#{varId}_cancel_buttons")
            -#  %button(dojoType="dijit.form.Button" value="Cancel" onclick="dijit.byId('#{varId}').cancel_edit();") Cancel


%br{:style=>'float:none; clear:both;'}
