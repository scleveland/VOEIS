:css
  #site_lat_long_picker {
    width: 600px!important;
    height: 350px!important;
    padding: 0!important;
  }
  #site_lat_long_mapdiv {
    width: 585px!important;
    height: 305px!important;
    margin: 0!important;
    padding: 0!important;
    xposition: absolute;
    xborder: red solid 3px;
  }
  #site_lat_long_map_control {
    width: 84px;
    height: 24px;
    margin: 10px 5px;
    background: url('/images/select-button-gold.gif') transparent center no-repeat;
    cursor: pointer;
  }


-########################
- edit_auth = !current_user.nil? && (current_user.has_role?('Data Manager',@project) || current_user.has_role?('Principal Investigator',@project))
- url_api_key = current_user.nil? || current_user.api_key.blank? ? "" : "?api_key=#{current_user.api_key}"
- url_api_key0 = current_user.nil? || current_user.api_key.blank? ? "" : "&api_key=#{current_user.api_key}"
-#- site_id = @site.nil? ? 0 : @site.id
-# tabId = @project.id.to_s+'-site'+site_id.to_s+'-data'
-#- tabId = 'site'+site_id.to_s+'_data'
-########################

- content_for(:stylesheets) do
  = stylesheet_link_tag("/javascripts/dojox/grid/enhanced/resources/EnhancedGrid.css")
  = stylesheet_link_tag("/javascripts/dojox/grid/enhanced/resources/claro/EnhancedGrid.css")

= javascript_include_tag("https://maps.google.com/maps/api/js?sensor=false")
= javascript_include_tag("jquery.flot.js")

- content_for(:javascripts) do
  :javascript
    dojo.require("dijit.dijit");
    dojo.require("dijit.Declaration");
    dojo.require("dijit.Dialog");
    dojo.require("dijit.form.Form");
    dojo.require("dijit.form.TextBox");
    dojo.require("dijit.form.DateTextBox");
    dojo.require("dijit.form.TimeTextBox");
    dojo.require("dijit.form.Button");
    dojo.require("dijit.form.ValidationTextBox");
    dojo.require("dijit.form.SimpleTextarea"); 
    dojo.require("dijit.form.Textarea"); 
    dojo.require("dijit.form.Select");
    dojo.require("dijit.form.ComboBox");
    dojo.require("dijit.Tooltip");
    dojo.require("dijit.layout.TabContainer");
    dojo.require("dijit.layout.ContentPane");
    dojo.require("dojox.layout.ContentPane");
    dojo.require("dojox.grid.EnhancedGrid");
    dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
    dojo.require("dojox.grid.enhanced.plugins.Filter");
    dojo.require("dojo.data.ItemFileReadStore");
    dojo.require("dojo.data.ItemFileWriteStore");
    dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
    dojo.require("dojo.parser");
    dojo.require("voeis.Server");
    dojo.require("voeis.voeis_util");
    dojo.require("voeis.ui.SitePane2");
    //dojo.require("dojox.widget.Standby");
    
    //#####################
    // GLOBALS & STORES
    var projectSearchCount = 0;
    var update_select_element = false;
    var global_resize = {};
    var projectsDataStore = voeis.Server.DEFAULT.projectsDataStore();
    var projectStore = dojo.store.JsonRest({target: "#{root_url}projects.json?"});
    //var Sitestore = voeis.Server.DEFAULT.projectSitesDataStore('#{@project.id}');
    //var item = projectStore.get('id=#{@project.id}');
    //dojo.addOnLoad(function(){
    //  dijit.byId('split_map').store.add(item.results[0][0]);
    //});
    
    var site_pane_proto1 = '';
    var site_pane_proto2 = '';
    var pnow = '#{@today}';
    var puser = '#{@current_user.nil? ? "" : @current_user.name}';
    var thisSite = '';
    var thisForm = '';
    
    //DATA VALUE EDIT GLOBALS
    var edit_data_value_content = '';
    var data_value_edit;
    
    //MAP GLOBALS
    var pmap;
    var pmarkers = [];
    var icon_red = 'https://www.google.com/intl/en_us/mapfiles/ms/icons/red-dot.png';
    var icon_blue = 'https://www.google.com/intl/en_us/mapfiles/ms/icons/blue-dot.png';
    var icon_default = icon_red;
    var icon_pop = icon_blue;
    var site_data = [
      #{@sites.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_ref_data = [
      #{@site_ref.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_stat_data = [
      #{@site_stats.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_var_data = [
      #{@site_var_stats.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    //var site_samp_data = [
    //  #{@site_samps.map{|site| "        "+site.to_json}.join(",\n")}
    //];
    var site_samp_data = [
      #{@site_samp_totals.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_properties = [
      #{@site_properties.map{|prop| "       "+prop.to_json}.join(",\n")}
    ];
	  
    for(var i=0;i<site_data.length;i++) {
      site_data[i]['idx'] = i;
      site_data[i]['data_vars'] = site_stat_data[i].vars;
      site_data[i]['data_count'] = site_stat_data[i].count;
      site_data[i]['data_start'] = site_stat_data[i].first;
      site_data[i]['data_end'] = site_stat_data[i].last;
      site_data[i]['samp_count'] = site_samp_data[i][0];
      site_data[i]['samp_start'] = site_samp_data[i][1];
      site_data[i]['samp_end'] = site_samp_data[i][2];
      //site_data[i]['lat_long_datum'] = '-unknow-';
      for(prop in site_ref_data[i])
        site_data[i][prop] = site_ref_data[i][prop];
      //site_data[i]['vertical_datum'] = site_ref_data[i].vert_datum;
      //site_data[i]['local_projection'] = site_ref_data[i].local_proj;
    };
    var psites_json = {
      identifier: 'id',
      label: 'name',
      items: site_data };

    var psites = new dojo.data.ItemFileWriteStore({
      data: psites_json
    });
    
    //#####################
    //DOJO datastore utils: set default store
    datastore.store_default = psites;

    //#######################
    //CLEAR TOOLTIP on CLICK
    $('body').click( function(e){
      //console.log('DOM-CLICK:',e);
      $("#tooltip").remove();
    });
    
    function edit_formatter(id) {
      var link = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/pop\', ['+id+']);"><img src="/images/icons/blue-dot16.png" alt="MAP site" title="MAP" /></a>';
      //var vlink = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/select\', ['+id+']);"><img src="/images/icons/view.gif" alt="VIEW site" title="VIEW" /></a>';
      //var edlink = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/edit\', ['+id+']);"><img src="/images/icons/edit16.png" alt="EDIT site" title="EDIT" /></a>';
      //return link+'&nbsp;&nbsp;'+vlink;
      return link;
    }
    
    
    function get_site(siteId) {
      //for(var i=0;i<site_data.length;i++) 
      //  if(site_data[i].id==siteId) 
      //    return site_data[i];
      //siteId = ''+siteId;
      console.log('GET-SITE-ID: '+siteId);
      var site = datastore.get(siteId);
      return site;
    }
    
    function pmap_clear(siteId) {
      //CLEAR A MAP BALLOON
      //OR ALL IF NO SITEID
      for(var i=0;i<pmarkers.length;i++) {
        if(pmarkers[i].window.close && (!siteId || pmarkers[i].id==parseInt(siteId))) {
          pmarkers[i].window.close();
          pmarkers[i].setIcon(icon_default);
        }
      };
      var grid = dijit.byId('project_sites');
      grid.selection.clear();
      //pmap_refresh();
    }
    
    function pmap_new(siteId) {
      //ADD NEW MAP MARKER
      var item = get_site(siteId);
      console.log('>>>NEW MARKER:',item);
      pmap_add_item(item);
      pmap_refresh();
    }
    
    function pmap_update(siteId) {
      //UPDATE MAP MARKER
      var item = get_site(siteId);
      console.log('>>>UPD MARKER:',item);
      var point = new google.maps.LatLng(item.latitude, item.longitude);
      pmarkers[item.idx].setPosition(point);
      pmap_refresh();
    }
    
    function pmap_add_item(item) {
      //ADD ITEM MARKER TO MAP
      var site_name = item.name.toString();
      var point = new google.maps.LatLng(item.latitude, item.longitude);
      var marker = new google.maps.Marker({map:pmap, position:point, icon:icon_default, title:site_name});
      //##var link = '<a href="'+(window.location+'/sites/'+item.id)+'"><strong>'+item.name+'</strong></a>';
      //##var link2 = '<a href="'+(window.location+'/sites/'+item.id)+'"><strong>SITE DETAILS HERE</strong></a>';
      //##var edlink = '<a href="'+(window.location+'/sites/'+item.id)+'/edit/"><strong>EDIT SITE HERE</strong></a>';
      //##var link = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/select\', ['+item.id+']);"><strong>'+item.name+'</strong></a>';
      //##var link2 = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/select\', ['+item.id+']);"><strong>SITE DETAILS HERE</strong></a>';
      //##var edlink = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/edit\', ['+item.id+']);"><strong>EDIT SITE HERE</strong></a>';
      //var link = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/select\', ['+item.id+']);">';
      marker.idx = item.idx;
      //marker.idx = markers.length;
      marker.id = parseInt(item.id);
      marker.getSite = function(id) {
        //GET SITE FROM STORE
        var siteId = parseInt(id || this.id);
        console.log('GET-SITEID:',siteId);
        var site = get_site(siteId);
        return site;
      };
      marker.getInfo = function() {
        var item = this.getSite();
        var stats = site_stat_data[this.idx];
        console.log('SITE:',item)
        var link = '<a href="javascript:" onclick="dojo.publish(\'voeis/project/site/select\', ['+item.id+']);">';
        var info = '<p style="margin:0 15px;">';
        info += link+'<strong>'+item.name+'</strong></a><br/>&nbsp;&nbsp;&nbsp;';
        info += '(click for '+link+'<strong>SITE DETAILS</strong></a>)<br/>';
        info += '&nbsp;&nbsp; <strong>Code:</strong> '+item.code+'<br/>';
        info += '&nbsp;&nbsp; <strong>Site ID:</strong> '+item.id+'&nbsp;&nbsp;';
        info += '&nbsp;&nbsp; <strong>State:</strong> '+item.state+'<br/>';
        info += '&nbsp;&nbsp; <strong>Lat/Long:</strong> '+item.latitude+', '+item.longitude;
        info += '<br/>&nbsp;&nbsp; <strong>Variables:</strong> '+stats.vars+' &mdash; ';
        info += '<strong>Data collected:</strong> '+stats.count+'<br/>';
        info += '&nbsp;&nbsp; <strong>Starting:</strong> '+stats.first;
        info += ' &mdash; <strong>Ending:</strong> '+stats.last+'<br/>';
        //info += item.code+'<br/>Elevation: '+item.elevation_m+'<br/>'
        //info += item.county+', '+item.state+'</p>';
        info += '</p>';
        return info;
      };
      marker.window = {};
      marker.pop = function() {
        // this.setIcon(); this.getIcon();
        //var tabs = dijit.byId('tab_browser');
        //tabs.selectChild("#{@project.id}");
        pmap_clear();
        this.setIcon(icon_pop);
        this.window = new google.maps.InfoWindow({content:marker.getInfo()});
        this.window.open(pmap,this);
      };
      marker.selsite = function() {
        // click site table
        //var item = site_data[this.idx];
        var item = marker.getSite();
        var grid = dijit.byId('project_sites');
        var col = grid.layout.cells[0];
        for(var i=0; i<grid.rowCount; i++)
          if(item.id==grid.getItem(i).id) {
            grid.scrollToRow(i);
            grid.focus.setFocusCell(col,i);
            grid.focus.focusGrid();
            break;
          };
      };
      marker.seltable = function() {
        // click SiteDisplayGrid
        //var map = dijit.byId("overview");
        //var tabs = dijit.byId('tab_browser');
        //tabs.selectChild(map);
        //tabs.selectChild("#{@project.id}");
        //var item = site_data[this.idx];
        var item = marker.getSite();
        var grid = dijit.byId('SiteDisplayGrid');
        var col = grid.layout.cells[1];
        grid.selection.clear();
        //grid.selection.addToSelection(item);
        for(var i=0; i<grid.rowCount; i++)
          if(item.id==grid.getItem(i).id) {
            grid.scrollToRow(i);
            grid.focus.setFocusCell(col,i);
            grid.focus.focusGrid();
            break;
          };
        grid.selection.addToSelection(item);
      };
      marker.click = function(){
        this.selsite();
        //this.seltable();
        this.pop();
      };
      google.maps.event.addListener(marker, 'click', marker.click);
      pmarkers.push(marker);
    };

    function pmap_refresh(update) {
      var bounds = new google.maps.LatLngBounds();
      for(var i=0;i<site_data.length;i++) {
        var item = site_data[i];
        //var point = new google.maps.LatLng(item.latitude, item.longitude);
        var point = new google.maps.LatLng(item.latitude.toString(), item.longitude.toString());
        if(update) pmap_add_item(item);
        bounds.extend(point);
      };
      pmap.fitBounds(bounds);
      //OverviewGrid.set('store', 'psites');
    }
    
    //***
    //** GOOGLE MAP REDRAW
    //** google.maps.event.trigger(map, 'resize');
    //***
    function pmap_redraw() {
      google.maps.event.trigger(pmap, 'resize');
    }
    
    function pmap_init() {
      var map_opts = {
        scaleControl: true, 
        zoomControl: true, 
        mapTypeControl: true, 
        scrollwheel: true, 
        mapTypeId: google.maps.MapTypeId.SATELLITE, 
        center: new google.maps.LatLng(46.739861,-110.786133), 
        zoom: 4};
      pmap = new google.maps.Map(document.getElementById("#{@project.id}"), map_opts);
      google.maps.event.addListenerOnce(pmap, 'bounds_changed', function(){
        console.log('MAP LOADED')
        if(window.on_map_load) on_map_load();
        //
        //var winH = $(window).height();
        //var gridH = (winH-168)+'px';
        //$(grid).css('height',gridH);
        //OverviewGrid.set('height',gridH);
        //OverviewGrid.resize();
      });
      pmap_refresh(true);
    };

    //OPEN TABS?
    function on_map_load() {
      if('#{@tab}'=='newsite')
        dojo.publish('voeis/project/site/new');
      //
      //var gridW = parseInt($('#project_sites').css('width'));
      //$('#project_sites').css('width',(gridW-50)+'px');
      //$('#project_sites').css('width',gridW+'px');
      //OverviewGrid.resize();
    };

    dojo.addOnLoad(function(){
      //dojo.byId('SiteDisplayGrid').canSort = function(col,field){ return false; };
    });
    
    function pre_dojo_parse() {
      //PRE DOJO PARSE STUFF HERE
      console.log('PRE-PARSE!');
      var content = $('#site_pane_proto1');
      site_pane_proto1 = content.html();
      content.empty();
      var content = $('#site_pane_proto2');
      site_pane_proto2 = content.html();
      content.empty();
      //$('.site_pane_protos').
      //var toDel = this.containerNode.childNodes;
      //if(toDel) 
      //  for(var i=0;i<toDel.length;i++) {
      //    //console.log('Node: '+toDel[i].nodeName+' ('+toDel[i].id+')');
      //    this.containerNode.removeChild(toDel[i]);
      //  };
      
      //DATA VALUE EDIT -PRE DOJO PARSE
      console.log('DATA-QUERY PRE-PARSE!');
      var content = $('#edit_data_value_content');
      edit_data_value_content = content.html();
      //console.log('CONTENT:',content);
      content.empty();
    };
    
    function post_dojo_parse() {
      //POST DOJO PARSE STUFF HERE
      //console.log('POST-PARSE!');
      
      //### DESTROY DOJO WIDGETS FOR TAB PROTO
      //var proto = dojo.byId('site_pane_proto');
      //dojo.forEach(dijit.findWidgets(proto), function(w){
      //  w.destroyRecursive(true);
      //});
      //console.log('PURGING WIDGETS??');
      $('#site_pane_proto').find('*').each(function(idx){
        //console.log('EleID: '+this.id);
        var wid = dijit.byNode(this);
        if(wid) wid.destroyRecursive();
        wid = dijit.byId(this.id);
        if(wid) wid.destroyRecursive();
      });
      console.log('#### POST-PARSE!');
      //SETUP ONSHOW ON PROJECT OVERVIEW TAB
      overviewTab.connect(overviewTab, 'onShow', function(){
        console.log('overviewTab:onSHOW!')
        pmap_refresh();
        pmap_redraw();
        OverviewGrid.setQuery({id: '*'});
      });
    };
    
    ////###############################

    function tab_pre_dojo_parse() {
      //PRE DOJO PARSE STUFF HERE
      //console.log('DATA-QUERY PRE-PARSE!');
      //var content = $('#edit_data_value_content');
      //edit_data_value_content = content.html();
      //console.log('CONTENT:',content);
      //content.empty();
    };

    function data_value_edit_setup(){};
    
    //### REFRESH TAB
    //# TABS: tab_browser --> site1 ----------------> _tabs
    //#                       site1_dataquery_001 --> _tabs
    //#                       project_variables ----> _tabs
    //#                       cv_vertical_datum ----> _tabs
    //#                       dataset3
    function refresh_tab() {
      var tabs = dijit.byId('tab_browser');
      var selected = tabs.selectedChildWidget;
      console.log('REFRESH:',selected.id);
      if(selected.id!='overview' && selected.id!='SiteDisplayGrid') {
        //###QUERY-RESULTS-TAB
        if(selected.id.match(/site\d+_dataquery_/)) {
          var mytabs = dijit.byId(selected.id+'_tabs');
          var myselected = mytabs.selectedChildWidget;
          console.log('REFRESH DATAQUERY TAB:',myselected.id);
          if($.inArray(myselected.id.slice(0,5),['plot_','grid_','qaqc_'])<0) {
            myselected.refresh();
            return;
          };
        //###SITE-TAB
        } else if(selected.id.match(/site\d+/)) {
          var mytabs = dijit.byId(selected.id+'_tabs');
          var myselected = mytabs.selectedChildWidget;
          console.log('REFRESH SITE TAB:',myselected.id);
          if($.inArray(myselected.id.slice(0,5),['show-','edit-','query'])<0) {
            myselected.refresh();
            return;
          };
          //selected.siteUpdate();
          return;
        //###MANAGE-SITES-TAB
        } else if(selected.id=='project_sitesxx') {
          var mytabs = dijit.byId(selected.id.slice(0,-2)+'_tabs');
          var myselected = mytabs.selectedChildWidget;
          console.log('REFRESH MANAGE SITEs TAB:',myselected.id);
          //var mysel = myselected.id.slice(0,6);
          //if(mysel!='sites_' && mysel!='newtab') {
          //  myselected.refresh();
          //  return;
          //};
        //###MANAGE-VARS-TAB
        } else if(selected.id=='project_variables') {
          var mytabs = dijit.byId(selected.id+'_tabs');
          var myselected = mytabs.selectedChildWidget;
          console.log('REFRESH MANAGE VARs TAB:',myselected.id);
          var mysel = myselected.id.slice(0,4);
          if(mysel!='vars' && mysel!='new_') {
            myselected.refresh();
            return;
          };
        //###CV-MANAGE-TAB
        } else if(selected.id.match(/cv_.+/)) {
          var mytabs = dijit.byId(selected.id+'_tabs');
          var myselected = mytabs.selectedChildWidget;
          console.log('REFRESH CV TAB:',myselected.id);
          var mysel = myselected.id.slice(0,7);
          if(mysel!='manage_' && mysel!='copytab') {
            myselected.refresh();
            return;
          };
        };
        selected.refresh();
      };
    };
    
    // OPEN CV MANAGEMENT TAB
    function cv_pop(title,title2,href,updElemID,callback) {
      var cv_url = href;
      var cv_id = 'cv_'+title2;
      var cv_title = title;
      if(updElemID)
        window.update_select_element=$('#'+updElemID);
      //window.open(hist_url, hist_title, 'width=950,height=550'); return;
      var cv_callback = function(){
        if(window.loaded) window.loaded();
        if(callback) callback();
        //if(window.initPage) 
        initPage();
      };
      dojo.publish('voeis/project/openTab',[cv_url,cv_id,cv_title,cv_callback]);
    }
    // OPEN CV MANAGEMENT TAB-- return to CURR TAB and POP NEW
    function cv_pop_new(title,title2,href,updElemID) {
      var tabs = dijit.byId('tab_browser');
      var mytab = tabs.selectedChildWidget;
      var loading = dijit.byId('loading_dialog');
      cv_pop(title,title2,href,updElemID,function(){
        loading.hide();
        window[title2+'_exec'].cv_datum_new();
      });
      tabs.selectChild(mytab);
      //var newtab = dijit.byId(title2);
      if(window[title2+'_exec'] && window[title2+'_exec'].cv_datum_new)
        window[title2+'_exec'].cv_datum_new();
      else
        loading.show();
    }
    
    //### Create DataSet dialog
    function createDataSet() {
      name_entry_dialog.pop('Create New Data Set',{
        SAVE: 'Create Data Set',
        FIELD1: 'Type:',
        FIELD3: 'Description:'
      },function(results){
        var vardata = {name: results.name, description: results.description, type: results.type};
        console.log('CREATE DATASET:',vardata);
        $.post("#{project_path(@project)}/apivs/create_project_data_set.json#{current_user.nil? ? "" : "?api_key="+current_user.api_key.to_s}",
          vardata,
          function(data) {
            $('##{@tabId}_data_set_select').append($("<option></option>").attr("value",data['id']).text(results.name));
            $('##{@tabId}_data_set_select').val(data['id']);
            //$('#data_set_select').append($("<option></option>").attr("value",data['id']).text(els.name.value)); 
            //$('#data_set_select').val(data['id']);
        });
      });
    }
    
    // RESIZE tabs- generic
    // tabs = widget
    // Hoff = height offset (0 for 90%)
    // Woff = width offset (0 for 95%)
    function resizeTabs(tabs_id,Hoff,Woff){
      if(Hoff && typeof Hoff==='string')
        var myH = Hoff;
      else if(Hoff && typeof Hoff==='number')
        var myH = (global_resize.winH-Hoff).toString()+'px';
      else var myH = 0;
      if(Woff && typeof Woff==='string')
        var myW = Woff;
      else if(Woff && typeof Woff==='number')
        var myW = (global_resize.winW-Woff).toString()+'px';
      else var myW = 0;
      
      var tabs = dojo.byId(tabs_id);
      if(tabs) tabs = dijit.byNode(tabs);
      if(tabs)  {
        if(myH) $(tabs.domNode).css('height',myH);
        if(myW) $(tabs.domNode).css('width',myW);
        tabs.resize();
        console.log('resizeTabs: '+tabs_id+'--',myH,myW);
      } else
        console.log('resizeTabs-- BAD ID: '+tabs_id+'--',myH,myW);
    };

    //### Dynamically Adjust TabContainer size
    function setTabSize() {
      var offH = 124;
      var offW = 50;
      var offMap = 255;
      var offGrid = 162;
      var tabs = dijit.byId('tab_browser');
      var winH = $(window).height();
      var winW = $(window).width();
      global_resize.winH = winH-offH;
      global_resize.winW = winW-offW;
      var map = document.getElementById('#{@project.id.to_s}');
      var mapGrid = $('#map-grid table');
      var gridW = parseInt($('#project_sites').css('width'));
      //OverviewGrid
      //console.log('ScreenH: '+winH);
      var tabsH = (winH-offH)+'px';
      var tabsW = (winW-offW)+'px';
      var mapW = (winW-offMap)+'px';
      $(tabs.domNode).css('height',tabsH);
      $(tabs.domNode).css('width',tabsW);
      tabs.resize();
      $(map).css('width',mapW);
      setTimeout(function(){
        setSiteListSize(offGrid);
        //console.log('SiteGridW:',gridW);
      },1500);
      //OTHER TAB SIZES
      for(resize in global_resize) 
        if(resize.slice(0,3)!='win') global_resize[resize]();
    };
    function setSiteListSize(offGrid) {
      var winH = $(window).height();
      var winW = $(window).width();
      var gridW = parseInt($('#project_sites').css('width'));
      var gridH = (winH-offGrid)+'px';
      $('#project_sites').css('height',gridH);
      OverviewGrid.set('height',gridH);
      $('#project_sites').css('width',(gridW-50)+'px');
      OverviewGrid.resize();
      $('#project_sites').css('width',gridW+'px');
      OverviewGrid.resize();
      //console.log('SiteGridW:',gridW);
    };

    $(window).resize(function() {
      setTabSize();
    });

    $(window).ready(function(){ 
      console.log('DONE LOADING!!');
      setTabSize();
      pmap_init();
      //HAVE SITES?
      if(site_data.length==0) {
        add_sample_menu.set('disabled',true);
        add_logger_menu.set('disabled',true);
      };
      
      //SETUP DATA VALUE EDIT DIALOG
      data_value_edit_setup();
      
      //if('#{@tab}'=='newsite')
      //  dojo.publish('voeis/project/site/new');

    });
    //%script{:type=>"dojo/method", :event=>"onShow"}
    //  :plain
    //    pmap_redraw();
    //    OverviewGrid.setQuery({id: '*'});
    
    
- if edit_auth
  :javascript
    function data_value_edit_setup() {
      data_value_edit = new dijit.Dialog({
        title: 'EDIT Data Value',
        style: 'width:560px;',
        item: 0,
        site_id: 0,
        editing: false,
        saved_callback: 0,
        populate: function(item,callback) {
          var item = item || this.item;
          if(!item) return;
          var form = dijit.byId('data_value_edit_form');
          var site0 = window['site'+this.site_id+'editref'].site;
          $('#dv_site_name').text(site0.name.toString()+' [Id:'+site0.id.toString()+']');
          var var0 = $('#query-site'+this.site_id+' #variable_select option').filter(':selected');
          var0 = var0.text().split('(')[0]+' [Id:'+var0.val()+']';
          console.log('VAR:',var0);
          //$('#dv_var_name').text(item.variable_name.toString()+' [Id:'+item.id.toString()+']');
          $('#dv_var_name').text(var0);
          var d0 = new Date(item.date_time_utc.toString());
          var d = new Date(d0.getTime()+((d0.getTimezoneOffset()/60-item.utc_offset)*3600000))
          form.reset();
          console.log('ITEM:',item);
          console.log('ITEM.local_data_time:',item['local_date_time'].toString());
          console.log('ITEM-utc-d0:',d0.format('UTC:m/d/yyyy HH:MM:ss')+' UTC');
          var data_val = item.data_value.toString();
          console.log('data_value:',data_val);
          dijit.byId('DV_data_value').set('value', data_val);
          dijit.byId('DV_data_type').set('value', item['datatype'].toString());
          //$('#DV_data_type_sel').val(item['datatype'].toString());
          dijit.byId('DV_string_value').set('value', item['string_value'].toString());
          dijit.byId('DV_value_accuracy').set('value', item['value_accuracy'].toString());
          dijit.byId('DV_replicate').set('value', item['replicate'].toString());
          dijit.byId('DV_vertical_offset').set('value', item['vertical_offset'].toString());
          dijit.byId('DV_end_vertical_offset').set('value', item['end_vertical_offset'].toString());
          //dijit.byId('DV_quality_control_level').set('value', item['quality_control_level'].toString());
          $('#DV_quality_control_level_sel').val(item['quality_control_level'].toString());
          if(item['published'][0]) dijit.byId('DV_published').set('checked', true);
          $('#DV_variable_sel').val(item['variable_id'][0]);
          
          dijit.byId('DV_local_date').set('value', item['local_date_time'].toString().slice(0,19));
          dijit.byId('DV_local_time').set('value', item['local_date_time'].toString().slice(0,19));
          dijit.byId('DV_utc_offset').set('value', item['utc_offset'].toString());

          //dijit.byId('DV_utc_date').set('value', item['date_time_utc'].toString());
          //dijit.byId('DV_utc_time').set('value', item['date_time_utc'].toString());
          //$('#utc_datetime').text(d0.format('UTC:m/d/yyyy HH:MM:ss')+' UTC');
          if(callback) this.saved_callback = callback;
        },
        pop: function(item,callback) {
          this.item = item;
          this.site_id = parseInt(item.site_id.toString());
          this.saved_callback = callback;
          this.show();
          this.populate(item);
          var form = dijit.byId('data_value_edit_form');
          var saveBtn = dijit.byId('data_value_edit_submit');
          // set initial state
          saveBtn.set("disabled", !form.isValid());
        },
        dateChange: function(newVal) {
          var item = this.item;
          if(!item) return;
          var date_time = this.getDateTimeTz();
          var utcval = date_time.tzoff;
          var dt = date_time.date;
          var tm = date_time.time;
          var tz = date_time.tz;
          console.log('DATE-CHANGE:',newVal);
          console.log('DATE-CHANGE:',dt+'T'+tm+tz);
          //item['utc_offset'] = [parseFloat(utcval)];
          //item['local_date_time'] = [dt+'T'+tm+tz];
          var d = new Date(dt+'T'+tm+tz);
          //item['date_time_utc'] = [d.format('UTC:'+dateFormat.masks.isoDateTime)];
          $('#utc_datetime').text(d.format('UTC:m/d/yyyy HH:MM:ss')+' UTC');
          //this.item = item;
          //this.dateChanged = false;
        },
        getDateTimeTz: function(tzString) {
          //###FORMAT local date-time string ISO
          var utcval = dijit.byId('DV_utc_offset').get('value');
          var dt = dijit.byId('DV_local_date').get('value').format('isoDate');
          var tm = dijit.byId('DV_local_time').get('value').format('isoTime');
          var tz = this.getTz(utcval);
          var itemtime = this.item.local_date_time.toString().slice(11,19);
          if(itemtime.slice(0,5)==tm.slice(0,5)) tm = itemtime;
          return {
            date: dt,
            time: tm,
            tzoff: utcval,
            tz: tz};
        },
        getTz: function(tzString) {
          //###FORMAT utc offset value: -7.5 = "-07:30" // 3.75 = "+03:45"
          var tzstr = tzString || dijit.byId('DV_utc_offset').get('value');
          var tz0 = tzstr.toString().split('.');
          var tz = (tz0[0][0]=='-' ? '-' : '+')+('00'+Math.abs(tz0[0])).slice(-2)+':';
          tz += tz0.length>1 ? ('0'+parseInt(parseInt(parseFloat('.'+tz0[1])*100)*.6)).slice(-2) : '00';
          return tz;
        },
        getLocalDate: function(dateString) {
          //###FORMAT local date string ISO
          var dt = dijit.byId('DV_local_date').get('value').format('isoDate');
          var tm = dijit.byId('DV_local_time').get('value').format('isoTime');
          var tz = this.getTz();
          item['utc_offset'] = [parseFloat(utcval)];
          item['local_date_time'] = [dt+'T'+tm+tz];
          var d = new Date(dt+'T'+tm+tz);
          item['date_time_utc'] = [d.format('UTC:'+dateFormat.masks.isoDateTime)+'+00:00'];
        },
        getUTCDate: function(dateString) {
          //###FORMAT utc date string ISO
          var utcval = dijit.byId('DV_utc_offset').get('value');
          var dt = dijit.byId('DV_local_date').get('value').format('isoDate');
          var tm = dijit.byId('DV_local_time').get('value').format('isoTime');
          var tz = this.getTz(utcval);
          item['utc_offset'] = [parseFloat(utcval)];
          item['local_date_time'] = [dt+'T'+tm+tz];
          var d = new Date(dt+'T'+tm+tz);
          item['date_time_utc'] = [d.format('UTC:'+dateFormat.masks.isoDateTime)+'+00:00'];
        },
        onShow: function() {
          var form = dijit.byId('data_value_edit_form');
          var saveBtn = dijit.byId('data_value_edit_submit');
          console.log('FORM:',form);
          console.log('BUTTON:',saveBtn);
          // set initial state
          saveBtn.set("disabled", !form.isValid());
          var x = $('#dv_var_name').text();
          $('#dv_var_name').text(x+' -- TEST!');
        },
        onHide: function() {
          this.editing = false;
        },
        onClose: function() {
          this.editing = false;
        },
        startup: function() {
          this.set('content', edit_data_value_content);
          this.parsedWidgets = dojo.parser.parse(this.domNode);
          //this.set('content', edit_data_value_content);
          console.log('PARSE:',this.parsedWidgets);
          var form = dijit.byId('data_value_edit_form');
          var saveBtn = dijit.byId('data_value_edit_submit');
          console.log('START-FORM:',form);
          console.log('START-SAVE:',saveBtn);
          var dv_date = dijit.byId('DV_local_date');
          var dv_time = dijit.byId('DV_local_time');
          var dv_utc = dijit.byId('DV_utc_offset');
          form.connectChildren();
          dojo.connect(dv_date, 'onChange', function(val){data_value_edit.dateChange(val)});
          dojo.connect(dv_time, 'onChange', function(val){data_value_edit.dateChange(val)});
          dojo.connect(dv_utc, 'onChange', function(val){data_value_edit.dateChange(val)});
          //###ON-STATE-CHANGE
          //dojo.connect(form, "onValidStateChange", function(state){
          form.watch('state', function(){
            var state = form.isValid();
            console.log('STATE-CHANGE:',state);
            saveBtn.attr("disabled", !state);
          });
          //###SAVE BUTTON
          dojo.connect(saveBtn, "onClick", function(){
            //var site = window[siteN+'ref'];
            console.log('SAVE-BUTTON!');
            var id = data_value_edit.item.id.toString();
            var date_time = data_value_edit.getDateTimeTz();
            var utcval = date_time.tzoff;
            var dt = date_time.date;
            var tm = date_time.time;
            var tz = date_time.tz;
            var diso = dt+'T'+tm+tz;
            console.log('LOCAL-DATE-TIME: '+diso);
            var data = {data_value: {
              data_value: dijit.byId('DV_data_value').get('value'),
              datatype: dijit.byId('DV_data_type').get('value'),
              //datatype: $('#DV_data_type_sel').val().toString(),
              string_value: dijit.byId('DV_string_value').get('value'),
              value_accuracy: dijit.byId('DV_value_accuracy').get('value'),
              replicate: dijit.byId('DV_replicate').get('value'),
              vertical_offset: dijit.byId('DV_vertical_offset').get('value'),
              end_vertical_offset: dijit.byId('DV_end_vertical_offset').get('value'),
              //quality_control_level: dijit.byId('DV_quality_control_level').get('value'),
              quality_control_level: $('#DV_quality_control_level_sel').val().toString(),
              published: dijit.byId('DV_published').get('checked').toString(),
              local_date_time: dt+'T'+tm+tz,
              utc_offset: utcval,
              date_time_utc: new Date(dt+'T'+tm+tz).format('UTC:'+dateFormat.masks.isoDateTime)+'+00:00',
              provenance_comment: dijit.byId('DV_provenance_comment').value}};
            console.log('DV-POST:',data);
            $.ajax({
              type: 'PUT',
              url: '/projects/#{@project.id}/data_values/'+id+'.json?api_key=#{current_user.api_key}',
              data: data,
              dataType: 'json',
              success: function(dat){
                //console.log('DataValue- SAVE THIS:',data_value_edit);
                console.log('DataValue- RETURNED:',dat);
                if(data_value_edit.saved_callback) data_value_edit.saved_callback(dat);
                data_value_edit.hide();
              }
            });
          });
        }
      });

    };
    
    

-#{@sites_data.each_with_index{|data,idx| "    site_data[%s].stats = %s;"%[idx,data.to_json]}.join("\n")}
    
- content_for(:toolbar) do
  -##dataButton{:dojoType => "dijit.form.DropDownButton"}
  -#  %span{:style => "font-weight:bold"}
  -#    TESTING
  -#  %div{:dojoType => "dijit.Menu"}
  -#    = link_to("TEST-STORE", "javascript:", :dojoType => "yogo.ui.MenuLink", :onclick=>"dojo.publish('voeis/project/site/test');")

  -##projectButton{:dojoType => "dijit.form.DropDownButton", :iconClass => "project-icon-25"}
  -#  %span 
  -#    = @project.name
  -#  %div{:dojoType => "dijit.Menu"}                    
  -#    = link_to("Overview", "#", :dojoType => "yogo.ui.MenuLink", :onclick=>"dijit.byId('overview_dialog').show();return false;")
  -#    -#-if !current_user.nil? && current_user.projects.include?(@project)
  -#    -#  = link_to("Add Site", new_project_site_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    - if @sites.count > 0
  -#      -#= link_to("Add Variable", new_project_variable_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      -#= link_to("Add Unit", new_project_unit_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Sample", new_project_sample_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      -#= link_to("Upload Sample Data", @project.id.to_s+"/data_values/pre_process_sample_file_upload", :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Data Stream", new_project_data_stream_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#      
  -#    - if @project.managed_repository { Voeis::Sample.all.count } > 0
  -#      = link_to("Add Sample Data", pre_process_samples_file_upload_project_data_values_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Field Data", new_field_measurement_project_sensor_values_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#    - if @project.managed_repository { Voeis::DataStream.all.count } > 0
  -#      = link_to("Add Data", add_project_data_streams_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Settings...", edit_project_path(@project), :dojoType => "yogo.ui.MenuLink")

  -##dataButton{:dojoType => "dijit.form.DropDownButton"}
  -#  %span{:style => "font-weight:bold"}
  -#    Project Data
  -#  %div{:dojoType => "dijit.Menu"}
  -#    -#= link_to("Browse", campaigns_path, :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Browse Data Streams", query_project_data_streams_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Browse Sample Data", query_project_samples_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    -if !current_user.nil?
  -#      = link_to("Search", campaigns_path, :dojoType => "yogo.ui.MenuLink")
  -#      %div{:dojoType=>"dijit.MenuSeparator"}
  -#      %div{:dojoType=>"dijit.PopupMenuItem"}
  -#        %span My Saved Searches
  -#        %div{:dojoType=>"dijit.Menu", :id=>"dataSubMenu"}
  -#          = render_cell(:data_menu, :display, :current_user => current_user)


#loading_dialog{:dojoType=>"dijit.Dialog", :disableCloseButton=>true, :title=>"Loading..."}
  #search-div-loader

#overview_dialog{:dojoType=>"dijit.Dialog", :disableCloseButton=>true, :title=>"Project Overview", :style=>"width:640px;"}
  - if @project.description && @project.description.length > 0
    = @project.description
  - else
    = link_to('[Add Project Description]', edit_project_path(@project))

#site_pane_proto1{:class=>"site_pane_protos", :style=>"display:none;"}
  -### EDIT 
  = render_widget :site_pane2, :display, :project=>@project, 
                                          :sites=>@sites, 
                                          :projectSite=>@site, 
                                          :siteProperties=>@site_properties,
                                          :user=>current_user,
                                          :root_url=>root_url

#site_pane_proto2{:class=>"site_pane_protos", :style=>"display:none;"}
  -### VIEW
  :css
    #content { margin:10px 50px }
    #wrapper {
      padding-bottom: 20px;
      background-color: #ccb;
      padding-top: 1px;
    }
    #wrapper img { margin-right:12px }
    #wrapper p { margin:0 20px }

    #site00-sample-table td { text-align:center; }
    #site00-sample-table td.time0 { text-align:left; }

    .row-lt1 { background-color:#ddd; }
    .row-gr { background-color: #6AA128; }
    .row-gr { background-color: #97C253; }
    .row-gr { background-color: #97D8AB; }
    .row-gr th { background-color: #97D8AB!important; }
    .row-gr td { background-color: #97D8AB!important; }
    .smfont, .smfont * { font-size:10px }


  -#- content_for(:javascripts) do
  -#%script{:type=>"text/javascript"}
  -#  :plain
  -#    console.log('DOJO/METHOD');

  -#:href=>"#{project_path(@project)}/samples#{@url_api_key}"}
  -#:href=>"#{project_path(@project)}/sites/versions?id=#{@site.id.to_s+@url_api_key0}"}


  -###%h3{:id=>"site00-name-head", :style=>"margin:0 0 10px 0;padding:0;"}
  -###  %span.small{:style=>"font-size:14px;", :id=>"site00-detail-label"}
  -###    SITE$$$id$$$:
  -###  $$$site-name$$$

  %p(style="margin:8px 0 8px 0;padding:0;")
    %span{:id=>"site00-detail-label"}  
      SITE$$$id$$$:
    %strong
      $$$site-name$$$

  %div{:dojoType=>"dijit.layout.TabContainer", :style=>"width:95%;height:400px;margin-top:10px;padding-top:0;", 
    :prop=>"parseOnLoad:true;", :tabPosition=>"top", :id=>"site00_tabs"}
    -#:prop=>"parseOnLoad:true;", :tabPosition=>"top", :useSlider=>"true", :tabStrip=>"true"}
    -#:prop=>"parseOnLoad:true;", :tabPosition=>"left-h", :tabStrip=>"false", :nested=>"true"}

    -#show-site00{:class=>"site00-divs", :style=>"margin-top:0;padding-top:0;"}
    #show-site00{:dojoType=>"dijit.layout.ContentPane", :title=>"Details", 
      :style=>"margin:0;padding:10px 0 0 8px;", :selected=>"true"}
      -#:style=>"margin:0;padding:0;", :selected=>"true", :useSlider=>"false", :tabStrip=>"false"}

      %br

      %table{:id=>"site00-property-table", :style=>"width:46%;margin-right:20px;margin-bottom:30px;float:left;"}
        - @site_properties.each do |prop|
          %tr{:class=>"row#{cycle('1','0')}"}
            %td{:style=>"text-align:right;width:45%"}
              %strong
                #{prop[:label]}
                &nbsp;&nbsp;&nbsp;
            %td{:class=>"show_#{prop[:name]}"}
              $$$#{prop[:name]}$$$

      -#%br{:style=>'float:none; clear:both;'}
      -#%br

      %h4{:style=>"margin-top:0;"}
        Sample Data Summary

      %table{:id=>"site00-sample-table", :style=>"width:48%;"} 
        %tr{:class=>"row-gr"}
          %th{:width=>"34%", :align=>"left"} &nbsp;
          %th{:width=>"14%"} Count
          %th{:width=>"14%"} Start
          %th{:width=>"14%"} Stop
        %tr
          %td{:style=>"width:34%;align:left;", :align=>"left"}
            &nbsp;
            -#%strong
            -#  = link_to('Sample Details', 'javascript:', :onclick=>"dojo.publish('voeis/project/samples', [$$$id$$$]);")
          %td{:style=>"width:14%;align:left;"}
            $$$site-sample-count$$$
          %td{:style=>"width:14%;align:center;"}
            $$$site-sample-start$$$
          %td{:style=>"width:14%;align:center;"}
            $$$site-sample-stop$$$
      %br

      %h4{:style=>"margin-top:0;"}
        Variable Data
        -if @auth && false
          %span{:style=>"font-size:11px;"}
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            -#= link_to('NEW VARIABLE', 'javascript:', :class=>'icon icon-add', :onclick=>"dojo.publish('voeis/project/variable', [0,'',$$$id$$$]);")
            = link_to('MANAGE VARIABLES', 'javascript:', :class=>'icon icon-add', :onclick=>"dojo.publish('voeis/project/variables');")

      %table{:id=>"site00-variable-table", :style=>"width:48%;foat:left;"}
        %tr{:class=>"row-gr"}
          %th{:width=>"30%"} Variable
          %th{:width=>"30%", :align=>"left"} Units / Type
          %th{:width=>"10%", :align=>"left"} Count
          %th{:width=>"14%"} Start
          %th{:width=>"14%"} Stop
        %tr
          %td
            $$$site-variable-data$$$


    -#query-site00{:class=>"site00-divs", :style=>"margin-top:0;padding-top:0;display:none;"}
    #query-site00{:dojoType=>"dijit.layout.ContentPane", :title=>"Data Query#{@edit_auth? ' QA/QC' : ''}", 
      :style=>"margin:0;padding:12px 0 0 8px;"}

      %br

      -#= form_for(:query, @query, :url => {:controller=>'samples', :action=>'search'}, :remote=>true, :html=>{:id=>tabId+'_query'}) do |f|
      %form(accept-charset="UTF-8" class="new_voeis_site" data-remote="true" id="site00_query" dojoType="dijit.form.Form")
        -#%input{:type=>"hidden", :name=>"tab_id", :value=>"#{tabId}"}
        -#=hidden_field_tag('tab_id', tabId)
        =hidden_field_tag('site_select', "$$$id$$$")
        Variable
        ($$$site-variable-count$$$):

        :plain
          <select id="variable_select" name="variable_select" style="width:450px;">
            $$$site-variable-select$$$
          </select>
        %br{:style=>'float:none; clear:both;'}
        %br
        %br

        %p
          %strong
            Data available for:
          $$$site-data-start$$$
          &mdash;
          $$$site-data-end$$$

        Dates After: 
        -#= date_select('range', 'start_date', :start_year => @start_year, :end_year => @end_year, :order => [:month, :day, :year])
        -#%input(name="start_date" dojoType="dijit.form.DateTextBox" id="start_date00" value="#{@start_date}" constraints="{datePattern:'yyyy-MM-dd'}" style="width:200px!important;")
        %input(name="start_date" dojoType="dijit.form.DateTextBox" value="$$$site-date-start$$$" style="width:200px!important;")
        &nbsp;&nbsp;&nbsp;
        Dates Before: 
        -#= date_select('range', 'end_date', :start_year => @start_year, :end_year => @end_year, :order => [:month, :day, :year])
        -#%input(name="end_date" dojoType="dijit.form.DateTextBox" id="end_date00" value="#{@end_date}" constraints="{datePattern:'yyyy-MM-dd'}" style="width:200px!important;")
        %input(name="end_date" dojoType="dijit.form.DateTextBox" value="$$$site-date-end$$$" style="width:200px!important;")
        %br{:style=>'float:none; clear:both;'}
        %br
        %b OPTIONAL:
        You can Specify some value restrictions:
        %br
        Value:
        %select{:name =>"first_value_select"}
          %option{:value=>"blank"}
          %option{:value=>"eql"}
            Is equal to
          %option{:value=>"lte"}
            Is less than or equal to
          %option{:value=>"gte"}
            Is greater than or equal to
        %input{:type=>"text", :name =>"first_value_text"}
        %select{:name =>"and_or_select"}
          %option{:value=>"and"}
            And
          %option{:value=>"or"}
            Or
        %br
        Value:
        %select{:name =>"second_value_select"}
          %option{:value=>"blank"}
          %option{:value=>"eql"}
            Is equal to
          %option{:value=>"lte"}
            Is less than or equal to
          %option{:value=>"gte"}
            Is greater than or equal to
        %input{:type=>"text", :name =>"second_value_text"}

        %br
        %br
        -#  (<span id="vars_count">#{@variable_opts_array.count}</span>):
        -#= f.submit('Search', :onclick => "dijit.byId('loading_dialog').show();")
        -#= link_to('Cancel', project_path(@project), :class => 'icon icon-cancel') 
        -#%button(dojoType="dijit.form.Button" type="submit" name="submit_form" value="Search" onclick="site00ref.submitDataQuery();return false;")
        -#  Search
        -#%button(dojoType="dijit.form.Button" name="submit_form" value="Search" onclick='$.get(CountQuery("$$$id$$$","#{project_path(@project)}"), function(data){if (confirm("Are you sure you want to get " + data["count"] + " records?")){site00ref.submitDataQuery();return false;}});')
        -#  Display Search Results
        -#%button(dojoType="dijit.form.Button" name="download_site_site00" value="Download" onclick='RunQuery("$$$id$$$","#{project_path(@project)}");')
        -#  Download Search Results
        -#%button(dojoType="dijit.form.Button" name="download_site_site00" value="Download" onclick='$.get(CountQuery("$$$id$$$","#{project_path(@project)}"), function(data){alert("This search yields " + data["count"] + " records.")});')
        -#  Return Number of Records in Search Results
        %button(dojoType="dijit.form.Button" name="submit_form" value="Search")
          Display Query Results
          %script{:type=>"dojo/method", :event=>"onClick"}
            :plain
              $.get(
                CountQuery("$$$id$$$","#{project_path(@project)}"), 
                function(data){
                  confirmDialog(
                    'RUN QUERY?',
                    "Are you sure you want to get "+data["count"]+" records?",
                    function(yes) {
                      if(yes) {
                        site00ref.submitDataQuery();
                        //return false;
                      }},
                    {buttonOk:'YES'});
                });

        %button(dojoType="dijit.form.Button" name="download_site_site00" value="Download" onclick='RunQuery("$$$id$$$","#{project_path(@project)}");')
          Download Query Results

        %button(dojoType="dijit.form.Button" name="download_site_site00" value="Download")
          Return Query Size
          %script{:type=>"dojo/method", :event=>"onClick"}
            :plain
              $.get(
                CountQuery("$$$id$$$","#{project_path(@project)}"), 
                function(data){
                  //alert("This search yields " + data["count"] + " records.");
                  error_dialog.pop("<br/>This query yields "+data["count"]+" records.<br/><br/>",0,'QUERY SIZE');
                });
        
        -###&nbsp;&nbsp;
        -###%button(dojoType="dijit.form.Button" name="cancel" value="Cancel" onclick="window.location=#{project_path(@project)}") 
        -###  Cancel
        -###  %script{:type=>"dojo/method", :event=>"onClick"}
        -###    :plain
        -###      $('#query-site00').hide();
        -###      $('#show-site00').show();

      %br{:style=>'float:none; clear:both;'}
      %br


    #samples-site00{:dojoType=>"dojox.layout.ContentPane", :title=>"Samples", :executeScripts=>"true", 
      :style=>"margin:0;padding:8px 0 0 8px;", :ioArgs=>"{ headers: {'Accept': 'text/html'} }", 
      :href=>"#{project_path(@project)}/samples/?site_id=$$$id$$$#{@url_api_key0}"}
      -#:style=>"margin:0;padding:8px 0 0 8px;", :href=>"#{project_path(@project)}/samples/?site_id=$$$id$$$#{@url_api_key0}"}
      %script{:type=>"dojo/method", :event=>"onLoad"}
        :plain
          var pane = dijit.byId('samples-site00');
          resizeTabs('site00_samples_grid','90%');
          //pane.set('href','#{project_path(@project)}/samples/?site_id=$$$id$$$#{@url_api_key0}');
          //pane._load();



-#site_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"psites", :data=>"psites_json"}
-#site_store{:dojoType=>"dojo.data.ItemFileWriteStore", :jsId=>"psites", :data=>"psites_json"}

#site_new_test{:dojoType=>"dijit.Dialog", :jsId=>"site_new_test", :title=>"NEW Testing!", :style=>"width:400px;"}
  %h3 TESTING
  %h4 This is a test...
  %br
  %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', 
    :onClick=>"confirmDialog('CLOSE DIALOG','Are you sure?',function(yes){if(yes)site_new_test.hide()},{buttonOk:'YES!'});return false;"} CLOSE
  %br

#error_dialog{:dojoType=>"dijit.Dialog", :title=>"ERROR", :style=>"width:500px;", :jsId=>"error_dialog"}
  %script{:type=>"dojo/method", :event=>"startup"}
    :plain
      error_dialog.pop = function(msg,dly,ttl){
        var delay = dly==null ? 3000 : dly*1000;
        if(ttl) error_dialog.set('title',ttl);
        $('#error_dialog .error_message').html(msg);
        error_dialog.show();
        if(delay>0)
          setTimeout(function(){
            error_dialog.hide();
          },delay);
      };
  %div.error_message{:style=>"color:#8A1F11;text-align:center;font-weight:bold;"}
    %strong{:style=>"color:#8A1F11;text-align:center;font-weight:bold;"}
      Error message here...

-## general purpose DataGrid Dialog -- .pop(ttl,struct,data) --to open
-##     ttl=Dialog Title, struct=Grid structure array, data=array of items for Grid dataStore
#grid_dialog{:dojoType=>"dijit.Dialog", :title=>"title here", :style=>"width:800px;", :jsId=>"grid_dialog"}
  %script{:type=>"dojo/method", :event=>"startup"}
    :plain
      grid_dialog.grid = grid_dialog_grid;
      grid_dialog.pop = function(ttl,struct,data){
        grid_dialog.set('title', ttl);
        var mystore = new dojo.data.ItemFileWriteStore({data: {identifier: 'id', items: data }});
        grid_dialog.show();
        grid_dialog.grid.set('store',mystore);
        grid_dialog.grid.set('structure',struct);
        grid_dialog.grid.startup();
        //###########
      };
  #grid_dialog_grid{:dojoType=>"dojox.grid.EnhancedGrid", :style=>"width:100%;height:350px;", 
          :plugins=> "{nestedSorting:false, filter:false, indirectSelection:false}",  
          :store=>"psites", 
          :structure=>"[{field:'id',name:'ID'}]",
          :jsId=>"grid_dialog_grid"}
    %script{:type => "dojo/method", :event => "onRowDblClick", :args => "evt"}
      :plain
        //WAS OPEN SITE DETAIL (no longer needed)
        //var item = this.getItem(evt.rowIndex);
        //window.location += '/sites/'+item.id;

-## general purpose Name & Description Dialog -- .pop(ttl,opts,callback)
-##      ttl = Dialog Title, 
-##      options = object of field options {field0:NameLabel, field1:fld1Label, field2:fld2Label, field3:..., field4:...}, 
-##      callback = results callback(results_object)
-### WAS >>> Create New Data Set
#name_entry_dialog{:dojoType=>"dijit.Dialog", :title=>"ENTER NAME", :jsId=>"name_entry_dialog"}
  %form(id="name_entry_form" dojoType="dijit.form.Form" method="post" style="overflow:visible;")
    %label#name_entry_label0 Name:
    =clear_break    
    %input{:type=>"text", :name=>"name", :id=>"name_entry_name", :dojoType=>"dijit.form.ValidationTextBox", 
          :size=>30, :style=>"width:32em", :required=>"true", :invalidMessage=>"A DataSet Name is required."}
    =clear_break      
    =clear_break 
    %span#name_entry_span1
      %label#name_entry_label1 FIELD1:
      %br
      -#=f.text_area :description, :cols=> 30, :rows => 3
      %input{:type=>"text",:dojoType=>"dijit.form.TextBox", :name=>"field1", :id=>"name_entry_field1", 
            :size=>30, :style=>"width:32em"}
      =clear_break
      =clear_break
    %span#name_entry_span2
      %label#name_entry_label2 FIELD2:
      %br
      %input{:type=>"text",:dojoType=>"dijit.form.TextBox", :name=>"field2", :id=>"name_entry_field2", 
            :size=>30, :style=>"width:32em"}
      =clear_break
      =clear_break 
    %span#name_entry_span3
      %label#name_entry_label3 FIELD3:
      %br
      %input(name="field3" dojoType="dijit.form.SimpleTextarea" id="name_entry_field3" rows="3" 
            style="width:32em!important;line-height:16px!important;")
      =clear_break
      =clear_break 
    %span#name_entry_span4
      %label#name_entry_label4 FIELD4:
      %br
      %input(name="field4" dojoType="dijit.form.SimpleTextarea" id="name_entry_field4" rows="3" 
            style="width:32em!important;line-height:16px!important;")
      =clear_break
      =clear_break 
    %br
    %button#name_entry_save{:dojoType=>"dijit.form.Button", :title=>'Create'}
      Save
      %script{:type=>"dojo/method", :event=>"startup"}
        :plain
          name_entry_dialog.callback = false;
          name_entry_dialog.options = {};
          name_entry_dialog.results = {};
          name_entry_dialog.pop = function(ttl,opts,callback){
            name_entry_dialog.set('title',ttl);
            if(callback) name_entry_dialog.callback = callback;
            if(opts) name_entry_dialog.options = opts;
            name_entry_dialog.show();
            //name_entry_dialog.setup();
          };
          name_entry_dialog.setup = function() {
            $('#name_entry_label0').text('Name:');
            $('#name_entry_save').text('Save');
            $('#name_entry_span1').hide();
            $('#name_entry_span2').hide();
            $('#name_entry_span3').hide();
            $('#name_entry_span4').hide();
            for(opt in name_entry_dialog.options) {
              if(opt.match(/^field[01234]$/i)) {
                var fldno = opt.slice(-1);
                if(fldno=='0') 
                  $('#name_entry_label0').text(name_entry_dialog.options[opt]);
                else {
                  $('#name_entry_span'+fldno).show();
                  $('#name_entry_label'+fldno).text(name_entry_dialog.options[opt]);
                };
              };
              if(opt.match(/^value[01234]$/i)) {
                var fldno = opt.slice(-1);
                if(fldno=='0') 
                  dijit.byId('name_entry_name').set('value',name_entry_dialog.options[opt]);
                else
                  dijit.byId('name_entry_field'+fldno).set('value',name_entry_dialog.options[opt]);
              };
              if(opt==='SAVE')
                $('#name_entry_save').text(name_entry_dialog.options['SAVE']);
            };
          };
          var form = dijit.byId("name_entry_form");
          //### set initial state
          this.attr("disabled", !form.isValid());
          this.connect(form, "onValidStateChange", function(state){
            this.attr("disabled", !state);
          });
          //### ON-SHOW
          name_entry_dialog.connect(name_entry_dialog, "onShow", function(state){
            form.reset();
            name_entry_dialog.setup();
          });
          //### ON-CLICK: SAVE
          this.connect(this, "onClick", function(){
            var els = dojo.byId("name_entry_form").elements;
            name_entry_dialog.results = {name: dijit.byId('name_entry_name').get('value')};
            for(opt in name_entry_dialog.options) {
              if(opt.match(/^field[1234]$/i)) {
                var fldno = opt.slice(-1);
                var fldname = name_entry_dialog.options[opt];
                name_entry_dialog.results[fldname] = dijit.byId('name_entry_field'+fldno).get('value');
              };
            };
            
            if(name_entry_dialog.callback) name_entry_dialog.callback(name_entry_dialog.results);
            name_entry_dialog.hide();
          });
    &nbsp;&nbsp;
    %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"name_entry_dialog.hide();return false;"} Cancel

-# ADDED: false && -- NO LONGER NEEDED?
-if false && !current_user.nil? && current_user.projects.include?(@project)
  -#= render(:partial => "data_set", :locals =>{:project_uid=>@project.id})
  -#%h3{:style=>"margin-top:0px;"} Create a new Data Set:
  #new_data_set{:dojoType=>"dijit.Dialog", :title=>"Create New Data Set", :jsId=>"new_data_set"}
    = form_for :data_set, :html=>{:dojoType=>"dijit.form.Form", :id=>"data_set_form"} do |f|
      %label Name:
      =clear_break    
      %input{:type=>"text", :name=>"name", :dojoType=>"dijit.form.ValidationTextBox", :size=>30,  :style=>"width:30em", :required=>"true", :invalidMessage=>"A DataSet Name is required."}
      =clear_break      
      =clear_break 
      %label Description:
      %br
      -#=f.text_area :description, :cols=> 30, :rows => 3
      %input{:type=>"text", :name=>"description", :size => 30, :style=>"width:30em",:dojoType=>"dijit.form.TextBox"}
      =clear_break
      =clear_break
      %label Type:
      %br
      %input{:type=>"text", :name=>"type", :size => 30, :style=>"width:30em",:dojoType=>"dijit.form.TextBox"}
      =clear_break
      =clear_break 
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Data Set
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            new_data_set.upd_select_id = false;
            new_data_set.setup = function(upd_select) {
              new_data_set.upd_select_id = upd_select;
              new_data_set.show();
            };
            var form = dijit.byId("data_set_form");
            //### set initial state
            this.attr("disabled", !form.isValid());
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            //### ON-SHOW
            new_data_set.connect(new_data_set, "onShow", function(state){
              form.reset();
            });
            //### ON-CLICK: SAVE
            this.connect(this, "onClick", function(){
              var els = dojo.byId("data_set_form").elements;
              //var qstr = "name="+els.name.value+"&description="+els.description.value+"&type="+els.type.value+"&api_key=#{User.current.api_key}";
              var vardata = {name: els.name.value, description: els.description.value, type: els.type.value};
              $.post("#{project_path(@project)}/apivs/create_project_data_set.json?api_key=#{User.current.api_key}",
                vardata,
                function(data) {
                  if(new_data_set.upd_select_id) {
                    $('#'+new_data_set.upd_select_id).append($("<option></option>").attr("value",data['id']).text(els.name.value)); 
                    $('#'+new_data_set.upd_select_id).val(data['id']);
                  };
                  //$('#data_set_select').append($("<option></option>").attr("value",data['id']).text(els.name.value)); 
                  //$('#data_set_select').val(data['id']);
                  dijit.byId("new_data_set").hide();
              });
            });
      &nbsp;&nbsp;
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"new_data_set.hide();return false;"} Cancel

#edit_data_value_content{:style=>"display:none;width:540px;"}
  %form(id="data_value_edit_form" dojoType="dijit.form.Form" method="post" style="overflow:visible;")
    -#%script{:type=>"dojo/method", :event=>"onValidStateChange", :args=>"state"}
    -#  :plain
    -#    var saveBtn = dijit.byId('data_value_edit_submit');
    -#    console.log('STATE-CHANGE:',state);
    -#    saveBtn.attr("disabled", !state);
    %table{:id=>"dv-form-table", :style=>"width:540px;"}
      %tr
        %td{:colspan=>"2"}
          -#%span{:class=>"smfont"} 
          -#  %strong SITE
          -#%br
          %h4{:id=>"dv_site_name", :style=>"margin:4px;"} xxx
          -#  -if !@site.nil?
          -#    = '%s [Id:%s]'% [@site.name,@site.id]
          -#%span{:class=>"smfont"} 
          -#  %strong VARIABLE
          -#%br
          %h4{:id=>"dv_var_name", :style=>"margin:2px;"} xxx
      %tr
        %td
          %label Data Value
          %br
          %input(name="data_value" dojoType="dijit.form.NumberTextBox" constraints="{places:'0,8', pattern:'########.########'}" 
              id="DV_data_value" style="width:200px;" required="true")
            %span{:class=>'label'}
        %td
          %label Data Origin
          %br
          %input(name="data_type" dojoType="dijit.form.ValidationTextBox" id="DV_data_type" required="true" style="width:200px;")
          -#%select(name="data_type" id="DV_data_type_sel" class="data_type_select")
          -#  = options_for_select(@cv_data_types.all.map{|v| [v.term, v.term]})
      %tr
        -#%td{:colspan=>"2"}
        %td
          %label String Representation
          %br
          %input(name="string_value" dojoType="dijit.form.ValidationTextBox" id="DV_string_value" required="true" style="width:200px;")
          -#%input(name="string_value" dojoType="dijit.form.ValidationTextBox" id="DV_string_value" required="true"
          -#      style="width:85%!important;")
        %td
          %label Value Accuracy
          %br
          %input(name="value_accuracy" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'########.######'}" 
              id="DV_value_accuracy" style="width:200px;" required="false")
      %tr
        %td{:colspan=>"2"}
          #dv_local_date{:style=>"float:left;margin-right:8px;"}
            -#%a{:style=>"cursor:pointer;", :class=>"icon icon-notice", :href=>"javascript:", :onclick=>"$('#dv_local_time').hide();$('#dv_utc_time').show();return false;"}
            -#  %strong Local Time [see UTC]
            %label Date
            %br
            %input(name="local_date" dojoType="dijit.form.DateTextBox" id="DV_local_date" required="true" style="width:110px!important;")
          #dv_local_time{:style=>"float:left;margin-right:8px;"}
            %label Time
            %br
            %input(name="local_time" dojoType="dijit.form.TimeTextBox" id="DV_local_time" required="true" style="width:90px!important;")
          #dv_utc_offset{:style=>"float:left;"}
            %label UTC offset
            %br
            %input(name="utc_offset" dojoType="dijit.form.NumberTextBox" id="DV_utc_offset" 
                  required="true" constraints="{pattern:'###.##'}" style="width:60px!important;")
          #utc_datetime{:style=>"background:#ddd;padding:3px 5px;margin:16px 0 0 20px;float:left;"} utc
          -#&nbsp;&nbsp;&nbsp;
          -#C4DEF6  border:solid 1px #4885F7;
          -##utc_datetime{:style=>"background:#ddd;padding:2px 5px;margin:16px 0 0 20px;float:left;"} utc
          -#%br{:style=>'float:none; clear:both;'}
      %tr
        %td
          %label Vertical Offset
          %br
          %input(name="vertical_offset" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'########.######'}" 
              id="DV_vertical_offset" style="width:200px;" required="false")
        %td
          %label End Vertical Offset
          %br
          %input(name="end_vertical_offset" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'########.######'}" 
              id="DV_end_vertical_offset" style="width:200px;" required="false")
      %tr
        %td
          %label Replicate
          %br
          %input(name="replicate" dojoType="dijit.form.ValidationTextBox" id="DV_replicate" required="true" style="width:200px;")
        %td
          %label Q/C Level
          %br
          -#%input(name="quality_control_level" dojoType="dijit.form.NumberTextBox" constraints="{pattern:'##########'}" 
          -#      id="DV_quality_control_level" style="width:70px!important;" required="true")
          %select(name="qcval" id="DV_quality_control_level_sel" class="quality_control_level_select")
            = options_for_select(@cv_qcvalues.all.map{|v| ["%s: %s"%[v.quality_control_level_code,v.definition[0..16]], v.quality_control_level_code]})
          &nbsp;&nbsp;&nbsp;&nbsp;
          %input(name="published" dojoType="dijit.form.CheckBox" id="DV_published") 
          Published
      %tr
        %td{:colspan=>"2"}
          %label Variable
          %br
          %select(name="variable" id="DV_variable_sel" class="quality_control_level_select")
            = options_for_select(@vars.map{|v| ["%s[%s] | %s (%s)"%[v[:variable_name],v[:id],v[:var_units_abbr],v[:data_type]], v[:id]]})
      %tr
        %td{:colspan=>"2"}
          %label Provenance Comment
          %br
          %input(name="provenance_comment" dojoType="dijit.form.SimpleTextarea" id="DV_provenance_comment" rows="3" 
                style="width:88%!important;line-height:16px!important;")

    %br{:style=>'float:none; clear:both;'}

    %button{:dojoType=>"dijit.form.Button", :id=>"data_value_edit_submit", :title=>'Create'} 
      Save Data Value
      -#%script{:type=>"dojo/method", :event=>"onClick"}
      -#  :plain
      -#    //var saveBtn = dijit.byId('data_value_edit_submit');
      -#    var data = {data_value: {
      -#      data_value = dijit.byId('DV_data_value').get('value'),
      -#      datatype = dijit.byId('DV_data_type').get('value'),
      -#      string_value = dijit.byId('DV_string_value').get('value'),
      -#      value_accuracy = dijit.byId('DV_value_accuracy').get('value'),
      -#      replicate = dijit.byId('DV_replicate').get('value'),
      -#      vertical_offset = dijit.byId('DV_vertical_offset').get('value'),
      -#      end_vertical_offset = dijit.byId('DV_end_vertical_offset').get('value'),
      -#      quality_control_level = dijit.byId('DV_quality_control_level').get('value'),
      -#      published = dijit.byId('DV_published').get('value'),
      -#      local_date_time = dijit.byId('DV_local_date').get('value'),
      -#      local_date_time = dijit.byId('DV_local_time').get('value'),
      -#      utc_date_time = dijit.byId('DV_utc_date').get('value'),
      -#      utc_date_time = dijit.byId('DV_utc_time').get('value'),
      -#      provenance_comment = dijit.byId('DV_provenance_comment').value}};
      -#    console.log('DV-POST:',data);
      -#    $.post('/projects/#{@project.id}/data_values.json', data, function(dat) {
      -#      //#####
      -#      data_value_edit.saved_callback(dat);
      -#    });
    &nbsp;&nbsp;
    %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"data_value_edit.hide();return false;"} Cancel
    %br{:style=>'float:none; clear:both;'}


-if @auth
  #site_lat_long_picker{:dojoType=>"dijit.Dialog", :jsId=>"site_lat_long_picker", :title=>"Select location for Latitude/Longitude v1 (click/shift-click to zoom in/out)", 
    :style=>"padding:0;width:450px;"}
    -#%button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"dijit.byId('site_lat_long_picker').hide();return false;"} CLOSE
    -#%br
    -##site_lat_long_mapdiv00{:style=>"margin:0!important;"}
    -#  %h4 MAP GOES HERE!
    #site_lat_long_mapdiv{:style=>"margin:0!important;"}
      %h4 MAP GOES HERE!
      -##site_lat_long_map_control{:onclick=>"dijit.byId('site_lat_long_picker').map_select();"}
      #site_lat_long_map_control{:onclick=>"site_lat_long_picker.map_select();"}
    %script{:type=>"dojo/method", :event=>"startup"}
      :plain
        var siteN = thisSite;
        var me = site_lat_long_picker;
        //POP function -Set Site & Show
        site_lat_long_picker.pop = function(siteId){
          site_lat_long_picker.siteId = siteId;
          site_lat_long_picker.show();
        };
        //###ON-SHOW
        this.connect(me, "onShow", function(){
          //var form = dijit.byId("site00_vertical_datum_form");
          //site_lat_long_picker.siteId = 1;
          var siteN = 'site'+site_lat_long_picker.siteId;
          //var siteN = thisSite;
          var site = window[siteN+'editref'];
          var form = window[siteN+'edit_edit_form'];
          var me = site_lat_long_picker;
          var mylat = dijit.byId(siteN+'edit_latitude').value;
          var mylong = dijit.byId(siteN+'edit_longitude').value;
          console.log('lat_long_picker:',mylat,mylong);
          //var me = dijit.byId('site_lat_long_picker')
          me.lat_long = {};
          var site_lat_long = {};
          //var mapdiv = dojo.byId("site00_loat_long_mapdiv");
          var mapdiv = dojo.byId('site_lat_long_mapdiv');
          var innerdiv = dojo.byId('site_lat_long_innerdiv');
          var button = dojo.byId('site_lat_long_map_control')
          var mapclick = false;
          var crosshairShape = {coords:[0,0,0,0],type:'rect'};
          var crosshairImg = '/images/cross-hairs.gif';
          var map_center = new google.maps.LatLng(39.707187,-96.152344);
          var map_zoom = 3;
          //if(!site.newSite) {
          //  map_center = new google.maps.LatLng(parseFloat(site.site.latitude),parseFloat(site.site.longitude));
          if(mylat && mylong) {
            map_center = new google.maps.LatLng(parseFloat(mylat),parseFloat(mylong));
            map_zoom = 15;
            console.log('EDIT SITE MAP:',map_center);
          };
          site_lat_long.map_opts = {
            //center: new google.maps.LatLng(46.739861,-110.786133), 
            center: map_center,
            zoom: map_zoom,
            mapTypeId: google.maps.MapTypeId.HYBRID,
            //mapTypeId: google.maps.MapTypeId.SATELLITE,
            //mapTypeId: google.maps.MapTypeId.TERRAIN,
            draggableCursor: 'crosshair',
            scaleControl: true, 
            zoomControl: true, 
            mapTypeControl: true,
            scrollwheel: true
          };
          var myOptions = {
            zoom:12,
            center:new google.maps.LatLng(39.707187,-96.152344),
            mapTypeId:google.maps.MapTypeId.SATELLITE,
            draggableCursor:'crosshair',
            mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.DROPDOWN_MENU}
          };
    
          console.log('GOOGLE MAP:',site_lat_long.map_opts);
          site_lat_long.map = new google.maps.Map(mapdiv, site_lat_long.map_opts);
          site_lat_long.crosshair = new google.maps.Marker({
            map: site_lat_long.map,
            icon: crosshairImg,
            shape: crosshairShape
          });
          site_lat_long.crosshair.bindTo('position',site_lat_long.map,'center');
          site_lat_long.map.controls[google.maps.ControlPosition.RIGHT_TOP].push(button);
          //###CLICK-MAP
          $('body').click( function(e){
            console.log('DOMCLICK:',e);
            if(!mapclick) return;
            var clickat = mapclick.latLng;
            var mapzoom = site_lat_long.map.getZoom();
            if(e.shiftKey) mapzoom -= 1;
            else mapzoom += 1;
            site_lat_long.map.setCenter(clickat);
            site_lat_long.map.setZoom(mapzoom);
            mapclick = false;
          });
          //google.maps.event.addDomListener(mapdiv, 'click', function(ev){ domclick = ev; });
          google.maps.event.addListener(site_lat_long.map, 'click', function(mapev){ 
            mapclick = mapev;
            //mapclick['mapCenter'] = site00_lat_long.map.getCenter();
            var clickat = mapev.latLng;
            console.log('CLICKAT:',clickat.toString());
          });
          //###SELECT FUNCTION
          me.map_select = function(){
            //var form = site00_edit_form.domNode;
            var me = site_lat_long_picker;
            var siteN = thisSite;
            //var siteN = 'site'+site_lat_long_picker.siteId;
            //var site = window[siteN+'ref'];
            //var form = window[siteN+'_edit_form'].domNode;
            var formlat = dijit.byId(siteN+'_latitude');
            var formlong = dijit.byId(siteN+'_longitude');
            var mapCenter = site_lat_long.map.getCenter();
            formlat.set('value',mapCenter.lat());
            formlong.set('value',mapCenter.lng());
            me.hide();
          };
        });
        //###ON-HIDE
        this.connect(this, "onHide", function(){
          //var form = site00_edit_form.domNode;
          //form.elements['site_lat_long_datum'].focus();
          //var formlat = dijit.byId('site00_latitude');
          var siteN = 'site'+site_lat_long_picker.siteId;
          var formlat = dijit.byId(siteN+'edit_latitude');
          console.log('LAT-LONG picker-- siteN:',siteN,formlat);
          formlat.focus();
        });

  -#%a{:href=>"javascript:", :onclick=>"alert('TESTING!!!');this.hide();return false;"}

  -#site00_xnew_local_projection{:dojoType=>"dijit.Dialog", :title=>"NEW Local Projection"}
  -##site00_new_local_projection{:dojoType=>"dijit.Dialog", :jsId=>"site00_new_local_projection", :title=>"NEW Local Projection"}
  -#  TESTING Local Projection
  -##site00_new_vertical_datum{:dojoType=>"dijit.Dialog", :jsId=>"site00_new_local_projection", :title=>"NEW Local Projection"}
  -#  TESTING Vertical Datum

  #site_new_vertical_datum{:dojoType=>"dijit.Dialog", :jsId=>"site_new_vertical_datum", :title=>"NEW Vertical Datum", :style=>"width:400px;"}
    %form(id="site_vertical_datum_form" jsId="site_vertical_datum_form" dojoType="dijit.form.Form" method="post")
      %label Term
      %br
      %input(name="vertical_datum_term" dojoType="dijit.form.ValidationTextBox" id="site_vertical_datum_term" required="true")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Definition
      %br
      -#%textarea{:type=>"text", :name=>"vertical_datum_definition", :id=>"site_vertical_datum_definition", :style=>"width:95%;", :rows=>"4"}
      %input(name="vertical_datum_definition" dojoType="dijit.form.SimpleTextarea" id="site_vertical_datum_definition" rows="5" 
            style="width:98%!important;line-height:16px!important;")
      %br{:style=>'float:none; clear:both;'}
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Vertical Datum
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            //var form = dijit.byId("site00_vertical_datum_form");
            var form = site_vertical_datum_form;
            var siteN = thisSite;
            var me = site_new_vertical_datum;
            //site_new_vertical_datum.show_elems = $('#'+siteN+'_vertical_datum');
            site_new_vertical_datum.sel_elem = $('#'+siteN+'_vertical_datum');
            //OPEN function -Set Site & Show
            //site_new_vertical_datum.open = function(show_elems,sel_elem){
            //  site_new_vertical_datum.show_elems = show_elems;
            //  site_new_vertical_datum.sel_elem = sel_elem;
              //site_new_vertical_datum.siteId = siteId;
            //  site_new_vertical_datum.show();
            //};
            //###ON-SHOW
            this.connect(me, "onShow", function(){
              console.log('NEW VerticalDatum SHOW:',arguments);
              var form = site_vertical_datum_form;
              site_new_vertical_datum.show_elems = $('#site1_vertical_datum');
              site_new_vertical_datum.sel_elem = $('#site1_vertical_datum');
              form.reset();
              // set initial state
              this.attr("disabled", !form.isValid());
            });
            //###ON-CHANGE
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            // SAVE BUTTON
            this.connect(this, "onClick", function(){
              //var siteId = site_new_vertical_datum.siteId;
              //var siteN = 'site'+site_new_vertical_datum.siteId;
              //var show_elems = site_new_vertical_datum.show_elems;
              var sel_elem = site_new_vertical_datum.sel_elem;
              var data = {vertical_datum_c_v: {
                term: $("#site_vertical_datum_term").val(),
                definition: $("#site_vertical_datum_definition").val()}};
              console.log('POST:',data);
              $.post("/vertical_datum_c_vs.json", data, function(dat) {
                sel_elem.append($("<option></option>").attr("value",dat['id']).text($('#site_vertical_datum_term').val()));
                sel_elem.val(dat['id']);
                site_new_vertical_datum.hide();
              });
            });
      &nbsp;&nbsp;
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"site_new_vertical_datum.hide();return false;"} Cancel

  #site_new_spatial_reference{:dojoType=>"dijit.Dialog", :jsId=>"site_new_spatial_reference", :title=>"NEW Spatial Reference", :style=>"width:400px;"}
    %form(id="site_spatial_reference_form" jsId="site_spatial_reference_form" dojoType="dijit.form.Form" method="post")
      %label Source ID
      %br
      %input(name="source_id" dojoType="dijit.form.NumberTextBox" id="site_source_id" style="width:18em;" required="true")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Source Name
      %br
      %input(name="source_name" dojoType="dijit.form.ValidationTextBox" id="site_source_name" style="width:18em;" required="true")
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      %input(name="source_geographic" dojoType="dijit.form.CheckBox" id="site_source_geographic")
      Geographic
    
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Notes
      %br
      %input(name="source_notes" dojoType="dijit.form.SimpleTextarea" id="site_source_notes" rows="5" 
            style="width:98%!important;line-height:16px!important;")
      %br{:style=>'float:none; clear:both;'}
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Spatial Reference
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            //var form = dijit.byId("site00_spatial_reference_form");
            var form = site_spatial_reference_form;
            var siteN = thisSite;
            var me = site_new_spatial_reference;
            site_new_spatial_reference.show_elems = $('.'+siteN+'_spatial_ref');
            site_new_spatial_reference.sel_elem = $('#'+siteN+'_lat_long_datum');
            //###ON-SHOW
            this.connect(me, "onShow", function(){
              var form = site_spatial_reference_form;
              form.reset();
              // set initial state
              this.attr("disabled", !form.isValid());
            });
            //###ON-CHANGE
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            // SAVE BUTTON
            this.connect(this, "onClick", function(){
              //var siteN = 'site'+site_new_spatial_reference.siteId;
              //var site = window[siteN+'ref'];
              //var form = site_spatial_reference_form;
              var show_elems = site_new_spatial_reference.show_elems;
              var sel_elem = site_new_spatial_reference.sel_elem;
              var is_geo = (dojo.byId("site_source_geographic").checked) ? true : false;
              var data = {spatial_reference: {
                srs_id: parseInt($("#site_source_id").val()),
                srs_name: $("#site_source_name").val(),
                is_geographic: is_geo,
                notes: $("#site_source_notes").val()}};
              console.log('POST:',data);
              $.post("/spatial_references.json", data, function(dat) {
                show_elems.append($("<option></option>").attr("value",dat['id']).text($('#site_source_name').val()));
                sel_elem.val(dat['id']);
                site_new_spatial_reference.hide();
              });
            });
      &nbsp;&nbsp;
      -#%button{:onclick=>"site00ref.dialog.hide();return false;", :value=>"Cancel"} Cancel
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"site_new_spatial_reference.hide();return false;"} Cancel

  #var_new_lab{:dojoType=>"dijit.Dialog", :jsId=>"var_new_lab", :title=>"NEW Laboratory", :style=>"width:400px;"}
    %form(id="var_new_lab_form" jsId="var_new_lab_form" dojoType="dijit.form.Form" method="post")
      %label Lab Name
      %br
      %input(name="lab_name" dojoType="dijit.form.ValidationTextBox" id="var_lab_name" style="width:98%!important;" required="true")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Lab Organization
      %br
      %input(name="lab_organization" dojoType="dijit_ext.ValidationTextarea" id="var_lab_organization" required="true" rows="5" 
            style="width:98%!important;line-height:16px!important;")
      %br{:style=>'float:none; clear:both;'}
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Lab
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            var form = var_new_lab_form;
            var me = var_new_lab;
            //###ON-SHOW
            this.connect(me, "onShow", function(){
              if(thisForm)
                var_new_lab.sel_elem = $(thisForm.domNode.elements['var_lab']);
              var form = var_new_lab_form;
              form.reset();
              // set initial state
              this.attr("disabled", !form.isValid());
            });
            //###ON-CHANGE
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            // SAVE BUTTON
            this.connect(this, "onClick", function(){
              var me = var_new_lab;
              var sel_elem = me.sel_elem;
              var data = {lab: {
                lab_name: $("#var_lab_name").val(),
                lab_organization: $("#var_lab_organization").val()}};
              console.log('POST:',data);
              $.post("/projects/#{@project.id}/labs.json", data, function(dat) {
                sel_elem.append($("<option></option>").attr("value",dat['id']).text($('#var_lab_name').val()));
                sel_elem.val(dat['id']);
                me.hide();
              });
            });
      &nbsp;&nbsp;
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"var_new_lab.hide();return false;"} Cancel

  #var_new_lab_method{:dojoType=>"dijit.Dialog", :jsId=>"var_new_lab_method", :title=>"NEW Lab Method", :style=>"width:400px;"}
    %form(id="var_new_lab_method_form" jsId="var_new_lab_method_form" dojoType="dijit.form.Form" method="post")
      %label Lab Method Name
      %br
      %input(name="lab_method_name" dojoType="dijit.form.ValidationTextBox" id="var_lab_method_name" style="width:98%!important;" required="true")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Lab Method Description
      %br
      %input(name="lab_method_description" dojoType="dijit_ext.ValidationTextarea" id="var_lab_method_description" required="true" 
            style="width:98%!important;line-height:16px!important;" rows="5")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Lab Method Link
      %br
      %input(name="lab_method_link" dojoType="dijit.form.ValidationTextBox" id="var_lab_method_link" style="width:98%!important;")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label HIS ID
      %br
      %input(name="lab_method_his_id" dojoType="dijit.form.NumberTextBox" id="var_lab_method_his_id")
      -#      constraints="{pattern:'######.######'}")
      %br{:style=>'float:none; clear:both;'}
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Lab Method
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            var form = var_new_lab_method_form;
            var me = var_new_lab_method;
            //###ON-SHOW
            this.connect(me, "onShow", function(){
              if(thisForm)
                me.sel_elem = $(thisForm.domNode.elements['var_lab_method']);
              var form = var_new_lab_method_form;
              form.reset();
              // set initial state
              this.attr("disabled", !form.isValid());
            });
            //###ON-CHANGE
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            // SAVE BUTTON
            this.connect(this, "onClick", function(){
              var me = var_new_lab_method;
              var sel_elem = me.sel_elem;
              var data = {lab_method: {
                lab_method_name: $("#var_lab_method_name").val(),
                lab_method_description: $("#var_lab_method_description").val(),
                lab_method_link: $("#var_lab_method_link").val(),
                his_id: $("#var_lab_method_his_id").val()}};
              console.log('POST:',data);
              $.post("/projects/#{@project.id}/lab_methods.json", data, function(dat) {
                sel_elem.append($("<option></option>").attr("value",dat['id']).text($('#var_lab_method_name').val()));
                sel_elem.val(dat['id']);
                me.hide();
              });
            });
      &nbsp;&nbsp;
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"var_new_lab_method.hide();return false;"} Cancel

  #var_new_field_method{:dojoType=>"dijit.Dialog", :jsId=>"var_new_field_method", :title=>"NEW Field Method", :style=>"width:400px;"}
    %form(id="var_new_field_method_form" jsId="var_new_field_method_form" dojoType="dijit.form.Form" method="post")
      %label Field Method Name
      %br
      %input(name="field_method_name" dojoType="dijit.form.ValidationTextBox" id="var_field_method_name" style="width:98%!important;" required="true")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Field Method Description
      %br
      %input(name="field_method_description" dojoType="dijit_ext.ValidationTextarea" id="var_field_method_description" required="true" 
            style="width:98%!important;line-height:16px!important;" rows="5")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label Field Method Link
      %br
      %input(name="field_method_link" dojoType="dijit.form.ValidationTextBox" id="var_field_method_link" style="width:98%!important;")
      %br{:style=>'float:none; clear:both;'}
      %br
      %label HIS ID
      %br
      %input(name="field_method_his_id" dojoType="dijit.form.NumberTextBox" id="var_field_method_his_id")
      -#      constraints="{pattern:'######.######'}")
      %br{:style=>'float:none; clear:both;'}
      %br
      %button{:dojoType=>"dijit.form.Button", :title=>'Create'}
        Create Field Method
        %script{:type=>"dojo/method", :event=>"startup"}
          :plain
            var form = var_new_field_method_form;
            var me = var_new_field_method;
            //###ON-SHOW
            this.connect(me, "onShow", function(){
              if(thisForm)
                me.sel_elem = $(thisForm.domNode.elements['var_field_method']);
              var form = var_new_field_method_form;
              form.reset();
              // set initial state
              this.attr("disabled", !form.isValid());
            });
            //###ON-CHANGE
            this.connect(form, "onValidStateChange", function(state){
              this.attr("disabled", !state);
            });
            // SAVE BUTTON
            this.connect(this, "onClick", function(){
              var me = var_new_field_method;
              var sel_elem = me.sel_elem;
              var data = {field_method: {
                method_name: $("#var_field_method_name").val(),
                method_description: $("#var_field_method_description").val(),
                method_link: $("#var_field_method_link").val(),
                his_id: $("#var_field_method_his_id").val()}};
              console.log('POST:',data);
              $.post("/projects/#{@project.id}/field_methods.json", data, function(dat) {
                sel_elem.append($("<option></option>").attr("value",dat['id']).text($('#var_field_method_name').val()));
                sel_elem.val(dat['id']);
                me.hide();
              });
            });
      &nbsp;&nbsp;
      %button{:dojoType=>"dijit.form.Button", :title=>'Cancel', :onClick=>"var_new_field_method.hide();return false;"} Cancel

-##############MAIN PAGE STUFF#####

#content-title{:style=>"margin:0;padding:0;"} 
  %a{:href=>"javascript:", :onclick=>"dijit.byId('overview_dialog').show();return false;", 
      :title=>"click for overview",
      :style=>"margin:0;padding:0;"}
    - if @project.is_private == true
      %span.icon-title.icon-private-title
        = @project.name
    - else
      %span.icon-title
        = @project.name
    %span.icon-title{:style=>"font-size:10px;"}
      &nbsp;&nbsp; (click for Project Overview)
  -#&nbsp;&nbsp;&nbsp;&nbsp;
  -#&nbsp;&nbsp;&nbsp;&nbsp;
  -#%strong


= clear_break

-########### MAIN TAB CONTAINER

-#tab_browser{:dojoType=>"dijit.layout.TabContainer", :style=>"width:905px;height:540px;margin-top:0;padding-top:0;"}
#tab_browser{:dojoType=>"dijit.layout.TabContainer", :style=>"width-min:920px;width:1100px;height-min:480px;height:540px;margin-top:0;padding-top:0;"}
  #overview{:dojoType=>"dijit.layout.ContentPane", :title=>"Project", :style=>"margin:0;padding:0;float:left;", :selected=>true, :jsId=>"overviewTab"}
    .show-map{:style=>"float:left;width:700px;height:100%;margin:0;padding:0;", :id=>@project.id}
    -#.show-map{:style=>"float:left;width:700px;height:500px;margin:0;padding:0;", :id=>@project.id}
    -#= render(:partial => 'overview_map', :locals => { :project => @project,
    -#                                                  :sites => @sites,
    -#                                                  :class_name => 'show-map' } )
    #map-grid{:style=>"margin:0;padding:0;"}
      %table{:id=>'project_sites', 
              :dojoType=>"dojox.grid.EnhancedGrid", 
              :jsId=>"OverviewGrid", 
              :store=>"psites", 
              :autoWidth=>"false",
              :style=>"width:200px;height:440px;float:left;margin:0;padding:0;cursor:pointer;"}
        -#:style=>"width:200px;height:500px;float:left;margin:0;padding:0;cursor:pointer;"}
        %script{:type => "dojo/method", :event => "onSelected", :args => "idx"}
          :plain
            //var map = dijit.byId(@project);
            //var map = getElementById('#{@project.id}');
            var item = this.getItem(idx);
            pmarkers[item.idx].pop();
            //pmarkers[item.idx].seltable();
        %thead
          %tr
            %th{:field => "name", :width => "auto"} Site
      = clear_break

  %table{:dojoType=>"dojox.grid.EnhancedGrid", :title=>"Data Summary", 
          :plugins=> "{nestedSorting:false, filter:true, indirectSelection:false}",  
          :store=>"psites", 
          :clientSort=>"true", 
          :sortInfo=>"2",
          :style=>"float:left;width:900px;", 
          :jsId=>"SiteDisplayGrid", 
          :id=>"SiteDisplayGrid"}
    -#:rowSelector=>"20px", 
    -#:selectionMode=>"none", 
    %script{:type => "dojo/method", :event => "onRowDblClick", :args => "evt"}
      :plain
        //WAS OPEN SITE DETAIL (no longer needed)
        //var item = this.getItem(evt.rowIndex);
        //window.location += '/sites/'+item.id;
    %script{:type => "dojo/method", :event => "onSelected", :args => "idx"}
      :plain
        //var map = dijit.byId(@project);
        //var map = getElementById('#{@project.id}');
        var item = this.getItem(idx);
        var projPane = dijit.byId("overview");
        var tabs = dijit.byId('tab_browser');
        console.log('TAB: '+tabs.selectedChildWidget.id);
        this.selection.clear();
        if(tabs.selectedChildWidget.id=='overview') return
        //tabs.selectChild(project);
        dojo.publish('voeis/project/site/select', item.id);
        //tabs.selectChild(project);
        //pmarkers[item.idx].pop();
        //pmarkers[item.idx].selsite();
    %thead
      %tr
        %th{:field=>"id", :width=>"45px", :filterable=>false, :formatter=>'edit_formatter'} Map
        %th{:field=>"name", :width=>"auto", :filterable=>true} Name
        %th{:field=>"id", :width=>"55px", :filterable=>true} ID
        %th{:field=>"code", :width=>"autopx", :filterable=>true} Code
        %th{:field=>"state", :width=>"70px", :filterable=>true} State
        %th{:field=>"data_vars", :width=>"55px", :filterable=>true} Vars
        %th{:field=>"data_count", :width=>"65px", :filterable=>true} Data
        %th{:field=>"data_start", :width=>"75px", :filterable=>true} Starting
        %th{:field=>"data_end", :width=>"75px", :filterable=>true} Ending
        -#%th{:field=>"latitude", :width=>"100px", :filterable=>true} Lat
        -#%th{:field=>"longitude", :width=>"100px", :filterable=>true} Long
  
  -#= clear_break
  
  -#%table{:id=>'project_sites_test', :dojoType=>"dojox.grid.EnhancedGrid", 
  -#        :jsId=>"OverviewGrid_test", 
  -#        :title=>"TestTab", 
  -#        :store=>"psites", 
  -#        :autoWidth=>"false",
  -#        :style=>"width:200px;height:500px;float:left;margin:0;padding:0;cursor:pointer;"}
  -#  -#:style=>"width:200px;height:500px;float:left;margin:0;padding:0;cursor:pointer;"}
  -#  %script{:type => "dojo/method", :event => "onSelected", :args => "idx"}
  -#    :plain
  -#      //var map = dijit.byId(@project);
  -#      //var map = getElementById('#{@project.id}');
  -#      var tabs = dijit.byId('tab_browser');
  -#      var projPane = dijit.byId("overview");
  -#      var item = this.getItem(idx);
  -#      tabs.selectChild(projPane);
  -#      pmarkers[item.idx].pop();
  -#      //pmarkers[item.idx].seltable();
  -#  %thead
  -#    %tr
  -#      %th{:field => "name", :width => "auto"} Site
  -#= clear_break

  
  -#%p{:style=>'font-size:10px;margin-top:5px;'}
  -#  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  -#  (double-click above for Site details)
  -#= clear_break

-#.data-browser
-##content-sidebar-left
-#= render_cell(:site_browser, :display, :project => resource)
-#= render(:partial => 'site_streams_picker', :locals => { :project => @project })  
-##main-with-sidebar-left
-# #graph-accordion
-# %h3
-# %a{:href=>"#"}
-# Graph
-# .data-graph
-# = render(:partial => 'graph',:locals => {:data => @current_data, :labels => @label_array, :project => @project, :class_name => 'data-graph' })
-# .data-table                                            
-# = render(:partial => 'data_table', :locals => { :data => @current_data, :labels => @label_array,:project => @project, :class_name => 'data-table' })  
  
= clear_break

#hidden-cells-and-partial
  -#=render_cell(:add_site, :display_form, :site => @site, :project => @project)

:javascript
  (function(){
    //###############
    
    TEST = 'TESTING--';
    
    //###############
    var openSiteTab = function(tabs, siteId, editMode) {
      //###SCROLL TO TOP
      //window.scrollTo(0,0);
      $('html #main_container').animate({scrollTop:0}, 'slow');//IE, FF
      $('body #main_container').animate({scrollTop:0}, 'slow');//chrome, don't know if safary works
      //var sitePane = new voeis.ui.SitePane();
      //console.log('>>>'+is_tab00(siteId));
      var site_id = 'site'+siteId;
      if(editMode) site_id += 'edit';
      var sitePane = dojo.byId(site_id);
      console.log(site_id, sitePane);
      if(sitePane) {
        sitePane = dijit.byNode(sitePane);
      } else {
        sitePane = new voeis.ui.SitePane2();
        //sitePane.setSite(get_site(siteId));
        sitePane.editMode = editMode || false;
        sitePane.setSite(siteId);
        tabs.addChild(sitePane);
        //console.log(sitePane);
      };
      tabs.selectChild(sitePane);
    };

    var openDataQueryTab = function(tabs, projectId, siteId) {
      if(parseInt(siteId)) var tabTitle = 'Data Query: Site-'+siteId;
      else var tabTitle = 'Data Query &ndash;';
      var projDataId = '#{@project.id}-site'+siteId+'-data';
      var projDataHref = "/projects/#{@project.id}/samples/query";
      if(parseInt(siteId)) projDataHref += '?site_id='+siteId
      var projDataLoad = function(varId,varName) {
        console.log('QUERY-LOADED!!');
        //data_value_edit.startup();
      };
      openProjTab(tabs, projDataHref, projDataId, tabTitle, projDataLoad);
      //##
    };

    var openDataQueryResultsTab = function(tabs, projectId, siteId, qstring) {
      if(parseInt(siteId)) {
        var count = ++window['site'+siteId+'ref'].queryCount;
        count = ('0000'+count).slice(-3);
        var tabTitle = 'Query Results: Site-'+siteId+' ['+count+']';
        //var tabId = '#{@project.id}-site'+siteId+'-query-'+count;
        var tabId = 'site'+siteId+'_dataquery_'+count;
      } else {
        var count = ++projectSearchCount;
        count = ('0000'+count).slice(-3);
        var tabTitle = 'Data Query Results: '+count;
        //var tabId = '#{@project.id}-dataquery'+count;
        var tabId = 'site0_dataquery_'+count;
      };
      var tabHref = "/projects/#{@project.id}/samples/search?tab_id="+tabId+"&"+qstring;
      var tabLoaded = function(varId,varName) {
        initPage();
        
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabLoaded);
      //##
    };

    var openSearchTab = function(tabs, projectId) {
      var tabTitle = 'Data Search &ndash;';
      var tabId = '#{@project.id}-search';
      var tabHref = "#{new_project_search_path(@project)}";
      var tabLoaded = function(varId,varName) {
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabLoaded);
      //##
    };
    
    var openSearchResultTab = function(tabs, projectId, searchURL) {
      var count = ++projectSearchCount;
      count = ('0000'+count).slice(-3);
      //var tabTitle = 'Search Result: ' + new Date().format("HH:MM");
      var tabTitle = 'Search Results  ['+count+']';
      //var tabId = '#{@project.id}--search--results--'+ new Date().getTime();
      //var tabId = '#{@project.id}--search-results--'+count;
      var tabId = 'search_results_'+count;
      var tabHref = searchURL+'&tab_id='+tabId;
      var tabLoaded = function(varId,varName) {
        drawGraph();
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabLoaded);
      //##
    };
    
    var openSampsTab = function(tabs, projectId, varId, varName, siteId) {
      var tabTitle = 'Samples: Site-'+siteId;
      var projVarId = 'site'+siteId+'-var'+varId;
      var projVarHref = "/projects/#{@project.id}/samples/";
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var saveStrip = tabs.tabStrip;
      console.log('TABSTRIP:',tabs.tabStrip);
      //tabs.tabStrip = false;
      var projVarLoad = function(varId,varName) {
      };
      openProjTab(tabs, projVarHref, projVarId, tabTitle, projVarLoad);
      //##
    };

    var openVarTab = function(tabs, projectId, varId, varName, siteId) {
      var tabTitle = 'NEW VARIABLE';
      if(parseInt(varId)) {
        tabTitle = 'Edit: '+varName+' ['+varId+']';
        if(parseInt(siteId)) tabTitle = 'Variable: '+varName+' ['+varId+']';
      };
      //var varPane = new voeis.ui.VariablePane();
      var projVarId = 'site'+siteId+'_var'+varId;
      var projVarHref = "/projects/#{@project.id}/variables/"+varId+".html?&site_id="+siteId;
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var saveStrip = tabs.tabStrip;
      console.log('TABSTRIP:',tabs.tabStrip);
      //tabs.tabStrip = false;
      var projVarLoad = function(varId,varName) {
        initPage();
      };
      openProjTab(tabs, projVarHref, projVarId, tabTitle, projVarLoad);
      //##
    };

    var openSampTab = function(tabs, projectId, sampId, sampName, siteId) {
      //var varPane = new voeis.ui.VariablePane();
      var tabTitle = 'Sample Data: '+sampName;
      var projSampId = 'samp'+sampId;
      var projSampHref = "/projects/#{@project.id}/samples/"+sampId+".html";
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var projSampLoad = function(varId,varName) {
      };
      openProjTab(tabs, projSampHref, projSampId, tabTitle, projSampLoad);
      //##
    };

    //##### SITE HISTORY TAB
    var openHistoryTab = function(tabs, projectId, siteId) {
      //var varPane = new voeis.ui.VariablePane();
      var projTabTitle = 'History: Site-'+siteId;
      var projHistHref = "/projects/#{@project.id}/sites/versions?id="+siteId;
      var projHistId = 'site'+siteId+'-history';
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var projHistLoad = function(siteId,varName) {
        //resize tabContainer
        initTabs();
      };
      openProjTab(tabs, projHistHref, projHistId, projTabTitle, projHistLoad);
      //##
    };

    //##### DATA-VALUE HISTORY TAB
    var openDataHistoryTab = function(tabs, projectId, dataId, dataVal, varId, varName, siteId, tabId) {
      var tabTitle = 'Data History: '+varName+' ('+dataVal+')';
      var projHistHref = "/projects/#{@project.id}/data_values/versions?id="+dataId+"&tab_id="+tabId;
      projHistHref += '#{current_user.nil? ? "" : "&api_key="+current_user.api_key.to_s}';
      // "/projects/#{@project.id}/variables/versions?id="+varId+"&site_id="+siteId;
      var projHistId = 'datavalue'+dataId+'-history';
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var projDataHistLoad = function(siteId,varName) {
        //resize tabContainer
        initTabs();
      };
      openProjTab(tabs, projHistHref, projHistId, tabTitle, projDataHistLoad);
      //##
    };

    //##### VARIABLE HISTORY TAB
    var openVarHistoryTab = function(tabs, projectId, varId, varName, siteId) {
      siteId = parseInt(siteId);
      var tabTitle = (siteId? 'Variable Hist: ' : 'Hist: ')+varName+' ['+varId+']';
      var projVarHistHref = "/projects/#{@project.id}/variables/versions?id="+varId;
      if(siteId) projVarHistHref += "&site_id="+siteId;
      //var projVarHistId = '#{@project.id}-site'+siteId+'-var'+varId+'-history';
      var projVarHistId = 'var'+varId+'-history';
      //href: voeis.Server.DEFAULT.project_variable_path(projectId,varId)});
      //projectSitePath(this.projectId, this.siteId)
      var projVarHistLoad = function(siteId,varName) {
        //resize tabContainer
        initTabs();
      };
      openProjTab(tabs, projVarHistHref, projVarHistId, tabTitle, projVarHistLoad);
      //##
    };

    //######### open project tab ##########
    var openProjTab = function(tabs, tabHref, tabId, tabTitle, tabLoad, tabClose) {
      //###SCROLL TO TOP
      //window.scrollTo(0,0);
      $('html #main_container').animate({scrollTop:0}, 'slow');//IE, FF
      $('body #main_container').animate({scrollTop:0}, 'slow');//chrome, don't know if safary works
      //var varPane = new voeis.ui.VariablePane();
      var tabPane = dojo.byId(tabId);
      if(tabPane) {
        tabPane = dijit.byNode(tabPane);
      } else {
        tabPane = new dojox.layout.ContentPane({
          id: tabId,
          title: tabTitle,
          style: "margine-top:0!important;padding-top:0!important;float:left;",
          closable: true,
          //parseOnLoad: false,
          executeScripts: true,
          ioArgs: { headers: {"Accept": "text/html"} },
          store: voeis.Server.DEFAULT,
          onDownloadEnd: function(){
            console.log('tab-load-done-NOW!');
            if(window.tab_pre_dojo_parse) tab_pre_dojo_parse();
            //console.log('NOW parse dijits');
            //dojo.parser.parse(this.domNode);
            console.log('TEST-'+TEST);
            //$('#top').css('display','none');
            //$('#bottom').css('display','none');
            if(window[tabId+"_tab_loaded"]) window[tabId+"_tab_loaded"] = true;
            if(tabLoad) tabLoad();
          },
          onClose: function(){
            //console.log('tab-close:---WORKING');
            //if(window.tab_pre_dojo_parse) tab_pre_dojo_parse();
            console.log('tab-close:',tabId);
            //var this_pane = dojo.byId(tabId);
            //if(this_pane) this_pane = dijit.byNode(this_pane);
            var this_pane = this;
            console.log('close-pane:',this_pane);
            tabs.removeChild(this_pane);
            this_pane.destroyRecursive(false);
            //dojo.destroy(this_pane);
            //### tab close callback
            if(tabClose) tabClose();
            return false;
          },
          href: tabHref});
        tabs.addChild(tabPane);
      };
      tabs.selectChild(tabPane);
    };

    var openTab = function(tabs, pane) {
      tabs.addChild(pane);
      tabs.selectChild(pane);
    };

    //#############

    dojo.subscribe("voeis/project/map/clear", function(siteId) {
      console.log('CLEAR MAP');
      var tabs = dijit.byId('tab_browser');
      var projPane = dijit.byId("overview");
      var selected = tabs.selectedChildWidget;
      tabs.selectChild(projPane);
      pmap_clear(siteId);
      tabs.selectChild(selected);
    });

    dojo.subscribe("voeis/project/map/new", function(siteId) {
      console.log('NEW MAP MARKER');
      var tabs = dijit.byId('tab_browser');
      var projPane = dijit.byId("overview");
      var selected = tabs.selectedChildWidget;
      tabs.selectChild(projPane);
      pmap_new(siteId);
      tabs.selectChild(selected);
    });

    dojo.subscribe("voeis/project/map/update", function(siteId) {
      console.log('UPD MAP MARKER');
      var tabs = dijit.byId('tab_browser');
      var projPane = dijit.byId("overview");
      var selected = tabs.selectedChildWidget;
      tabs.selectChild(projPane);
      pmap_clear(siteId);
      pmap_update(siteId);
      tabs.selectChild(selected);
    });

    dojo.subscribe("voeis/project/site/close", function(siteId,tabsId) {
      console.log('CLOSE SITE TAB:',siteId);
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      var sitePane = dojo.byId('site'+siteId+'edit');
      if(sitePane) {
        sitePane = dijit.byNode(sitePane);
        tabs.removeChild(sitePane);
        sitePane.onClose();
        sitePane.destroyRecursive();  
        pmap_clear(siteId);
      };
    });

    dojo.subscribe("voeis/project/site/new", function(tabsId) {
      console.log('NEW SITE');
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openSiteTab(tabs, 0, true);
    });

    dojo.subscribe("voeis/project/site/select", function(siteId,tabsId) {
      console.log(arguments);
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openSiteTab(tabs, siteId, false);
    });

    dojo.subscribe("voeis/project/site/edit", function(siteId,tabsId) {
      console.log(arguments);
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openSiteTab(tabs, siteId, true);
    });

    dojo.subscribe("voeis/project/site/pop", function(siteId,tabsId) {
      console.log('SITE-POP',arguments);
      var site = get_site(siteId);
      var projPane = dijit.byId("overview");
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      tabs.selectChild(projPane);
      pmarkers[site.idx].pop();
      pmarkers[site.idx].selsite();
    });

    dojo.subscribe("voeis/project/dataquery", function(siteId) {
      console.log('DATA-QUERY',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      openDataQueryTab(tabs, projectId, siteId);
    });
    
    dojo.subscribe("voeis/project/dataquery/results", function(siteId,qstring) {
      console.log('DATA-QUERY-RESULTS',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      openDataQueryResultsTab(tabs, projectId, siteId, qstring);
    });
    
    dojo.subscribe("voeis/project/data/history", function(dataId,dataVal,varId,varName,siteId,tabId,tabsId) {
      console.log('DATA-VALUE HISTORY',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openDataHistoryTab(tabs, projectId, dataId, dataVal, varId, varName, siteId,tabId);
    });

    dojo.subscribe("voeis/project/data/history/update", function(dataId) {
      console.log('DATA-VALUE HISTORY UPDATE:',arguments);
      var projDataHistId = '#{@project.id}--datavalue'+dataId+'-history';
      var histPane = dojo.byId(projDataHistId);
      if(histPane) {
        histPane = dijit.byNode(histPane);
        histPane.refresh();
      };
    });

    dojo.subscribe("voeis/project/sample", function(sampId,sampName,siteId,tabsId) {
      console.log('SAMPLE',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openSampTab(tabs, projectId, sampId, sampName, siteId);
    });

    dojo.subscribe("voeis/project/variable", function(varId,varName,siteId,tabsId) {
      console.log('VARIABLE',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openVarTab(tabs, projectId, varId, varName, siteId);
    });

    dojo.subscribe("voeis/project/variable/history", function(varId,varName,siteId,tabsId) {
      console.log('VAR HISTORY:',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openVarHistoryTab(tabs, projectId, varId, varName, siteId);
    });

    dojo.subscribe("voeis/project/variable/history/update", function(varId,siteId) {
      console.log('VARIABLE HISTORY UPDATE:',arguments);
      var projHistId = '#{@project.id}-site'+siteId+'-var'+varId+'-history';
      var histPane = dojo.byId(projHistId);
      if(histPane) {
        histPane = dijit.byNode(histPane);
        histPane.refresh();
      };
    });

    dojo.subscribe("voeis/project/site/history", function(siteId,tabsId) {
      console.log('SITE HISTORY',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      openHistoryTab(tabs, projectId, siteId);
    });

    dojo.subscribe("voeis/project/site/history/update", function(siteId) {
      console.log('SITE HISTORY UPDATE:',arguments);
      var projHistId = '#{@project.id}-site'+siteId+'-history';
      var histPane = dojo.byId(projHistId);
      if(histPane) {
        histPane = dijit.byNode(histPane);
        histPane.refresh();
      };
    });

    dojo.subscribe("voeis/project/browse", function(projectId) {
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      //openSitesGridTab(tabs, projectId);
      var grid = voeis.ui.ProjectSitesGrid(projectId);
      tabs.addChild(grid);
      tabs.selectChild(grid);
    });
    
    dojo.subscribe("voeis/project/search", function() {
      console.log('DATA-QUERY',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      openSearchTab(tabs, projectId);
    });
    
    dojo.subscribe("voeis/project/search/results", function(searchURL) {
      console.log('DATA-QUERY',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      openSearchResultTab(tabs, projectId, searchURL);
    });
    
    dojo.subscribe("voeis/project/dataset", function(setId,setName) {
      console.log('DATASET',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId('tab_browser');
      var tabHref = '#{project_path(@project)}/data_sets/'+setId;
      tabHref += '#{current_user.nil? ? "" : "?api_key="+current_user.api_key}';
      var tabId = 'dataset'+setId;
      var tabTitle = 'Data Set: '+setName;
      var tabCallback = function() {
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabCallback);
    });
    
    //MANAGE SITES
    dojo.subscribe("voeis/project/manage-sites", function() {
      console.log('MAN-SITES');
      var tabs = dijit.byId('tab_browser');
      var tabHref = '#{project_path(@project)}/sites';
      tabHref += '#{current_user.nil? ? "" : "?api_key="+current_user.api_key}';
      var tabId = 'project_sitesxx';
      var tabTitle = 'Manage Sites';
      var tabCallback = function() {
        pageInit();
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabCallback);
    });
    
    //MANAGE VARIABLES
    dojo.subscribe("voeis/project/variables", function() {
      console.log('MAN-VARIABLES');
      var tabs = dijit.byId('tab_browser');
      var tabHref = '#{project_path(@project)}/variables';
      tabHref += '#{current_user.nil? ? "" : "?api_key="+current_user.api_key}';
      var tabId = 'project_variables';
      var tabTitle = 'Manage Variables';
      var tabCallback = function() {
        pageInit();
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabCallback);
    });
    
    dojo.subscribe("voeis/project/samples", function(siteId) {
      console.log('SAMPLES:',arguments);
      var tabs = dijit.byId('tab_browser');
      var tabHref = '#{project_path(@project)}/samples';
      if(siteId) tabHref += '/?site_id='+siteId;
      tabHref += '#{current_user.nil? ? "" : "&api_key="+current_user.api_key}';
      var tabId = 'site'+siteId+'_samples';
      var tabTitle = 'Site-'+siteId+': Samples';
      var tabCallback = function() {
        //pageInit();
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabCallback);
    });
    
    dojo.subscribe("voeis/project/jobs", function() {
      console.log('JOBS');
      var tabs = dijit.byId('tab_browser');
      var tabHref = '#{project_path(@project)}/jobs';
      tabHref += '#{current_user.nil? ? "" : "?api_key="+current_user.api_key}';
      var tabId = 'project_jobs';
      var tabTitle = 'Project Jobs';
      var tabCallback = function() {
        //pageInit();
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, tabCallback);
    });
    
    dojo.subscribe("voeis/project/openTab", function(tabHref,tabId,tabTitle,load_callback,close_callback,tabsId) {
      console.log('OPEN-TAB',arguments);
      var projectId = "#{@project.id}";
      var tabs = dijit.byId((tabsId)? tabsId : 'tab_browser');
      var loadCallback = load_callback || function() {
      };
      var closeCallback = close_callback || function() {
      };
      openProjTab(tabs, tabHref, tabId, tabTitle, loadCallback, closeCallback);
    });
    
    dojo.subscribe("tab_browser-selectChild", function(selected){
        // TAB-IDs
        // overview - Project
        // SiteDisplayGrid - Data Summary
        // site1 --
        // site1_var17 --
        // site0_var0 --
        // site1_dataquery_001
        // project_variables
        // site1-history -- NEED TO GET RID OF ProjectID
        // var37-history --
        // vertical_datum --
        // dataset1 -- NEED TO GET RID OF ProjectID
        var tabs = dijit.byId('tab_browser');
        var site_count = datastore.count(psites);
        //psites._arrayOfAllItems.length;
        var data_btn = dijit.byId('dataButton');
        if(!selected) selected = tabs.selectedChildWidget;
        console.log('PANE:',selected.id,selected.title);
        console.log('SITES # ',site_count);
        if(site_count>0) data_btn.set('disabled',false);
        else data_btn.set('disabled',true);
        if(selected.id=='overview' || selected.id=='SiteDisplayGrid')
          main_menu_ref.set('disabled',true);
        else main_menu_ref.set('disabled',false);
        
    });
    
  })();

